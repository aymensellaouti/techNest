var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddCvDto.html",[0,0.059,1,2.034]],["body/classes/AddCvDto.html",[0,0.09,1,2.751,2,1.262,3,0.242,4,0.21,5,0.21,6,5.224,7,2.466,8,0.308,9,1.613,10,3.138,11,3.852,12,3.852,13,3.852,14,1.219,15,3.138,16,0.801,17,0.026,18,2.645,19,1.867,20,3.323,21,0.828,22,2.806,23,3.323,24,2.806,25,2.084,26,5.192,27,2.806,28,2.806,29,2.806,30,2.806,31,2.806,32,0.422,33,3.651,34,3.852,35,3.378,36,4.341,37,2.806,38,2.806,39,1.694,40,2.008,41,0.242,42,2.806,43,2.806,44,0.013,45,0.017,46,0.013]],["title/classes/AddTodoDto.html",[0,0.059,47,2.034]],["body/classes/AddTodoDto.html",[0,0.088,2,1.477,3,0.283,4,0.246,5,0.246,8,0.361,9,1.791,14,1.448,16,0.634,17,0.026,19,1.563,21,0.693,25,1.968,32,0.361,33,3.395,36,4.169,39,1.983,41,0.283,44,0.015,45,0.019,46,0.015,47,3.056,48,4.744,49,2.886,50,3.739,51,3.89,52,3.89,53,3.89,54,4.27,55,3.056,56,5.057,57,5.057,58,4.27,59,5.057,60,3.365,61,2.798,62,5.057,63,3.89,64,3.89,65,3.89,66,3.89,67,3.89,68,3.89,69,3.89,70,3.89,71,3.89]],["title/controllers/AppController.html",[72,1.474,73,2.24]],["body/controllers/AppController.html",[0,0.072,3,0.303,4,0.263,5,0.263,8,0.386,17,0.026,19,1.285,21,0.57,25,1.746,32,0.538,41,0.303,44,0.016,45,0.02,46,0.016,61,2.302,72,2.311,73,3.513,74,1.821,75,3.512,76,1.524,77,5.151,78,5.279,79,4.159,80,1.201,81,0.786,82,3.209,83,3.512,84,4.897,85,2.768,86,1.821,87,2.311,88,5.279,89,4.159,90,4.159,91,4.159,92,1.473,93,4.159]],["title/modules/AppModule.html",[94,1.371,95,2.24]],["body/modules/AppModule.html",[0,0.044,3,0.184,4,0.16,5,0.16,14,0.592,15,2.26,16,0.469,17,0.027,21,0.346,32,0.596,41,0.184,44,0.01,45,0.014,46,0.01,73,2.965,74,1.637,76,0.728,80,0.728,81,0.477,82,3.46,83,2.13,85,1.679,94,1.523,95,4.275,96,1.19,97,1.764,98,2.13,99,2.13,100,2.13,101,2.13,102,3.331,103,3.05,104,3.331,105,3.05,106,2.069,107,1.396,108,1.396,109,2.523,110,2.26,111,2.488,112,2.774,113,2.523,114,3.739,115,4.928,116,2.523,117,0.835,118,0.835,119,2.523,120,3.158,121,2.13,122,3.739,123,2.523,124,2.523,125,2.523,126,1.679,127,2.523,128,1.679,129,2.523,130,2.523,131,2.488,132,2.13,133,2.523,134,1.872,135,1.286,136,2.523,137,2.13,138,3.739,139,2.523,140,2.523,141,1.679,142,1.679,143,2.13,144,3.739,145,2.13,146,2.523,147,2.523,148,2.965,149,2.523,150,2.523,151,2.13,152,2.523,153,2.523,154,2.523,155,2.523,156,2.523,157,1.396,158,2.523,159,2.523,160,1.524,161,2.523,162,2.523,163,2.523,164,2.523,165,2.523,166,2.523,167,2.523,168,2.523,169,1.524,170,2.523,171,2.13,172,2.523,173,2.523,174,1.679,175,2.523,176,2.069,177,3.739,178,2.523,179,2.523,180,2.523,181,2.523]],["title/injectables/AppService.html",[82,1.863,182,0.545]],["body/injectables/AppService.html",[0,0.08,3,0.336,4,0.292,5,0.292,8,0.428,17,0.026,21,0.633,25,1.863,32,0.428,41,0.336,44,0.018,45,0.022,46,0.018,76,1.626,77,5.344,80,1.332,81,0.872,82,3.116,92,1.634,131,3.07,182,0.912,183,1.634,184,3.895,185,4.613,186,4.613,187,4.613]],["title/controllers/CvController.html",[72,1.474,188,2.24]],["body/controllers/CvController.html",[0,0.032,1,2.932,3,0.134,4,0.116,5,0.116,8,0.17,10,1.11,14,1.195,16,0.523,17,0.027,18,2.385,19,1.684,21,0.747,32,0.49,41,0.134,44,0.007,45,0.011,46,0.007,61,1.016,72,0.804,74,0.804,76,0.846,80,1.573,81,0.347,86,0.804,87,0.804,92,1.93,117,1.684,118,1.684,120,1.551,188,1.949,189,1.551,190,1.363,191,1.77,192,3.562,193,3.084,194,3.084,195,3.652,196,3.652,197,3.084,198,4.167,199,4.167,200,3.084,201,3.084,202,1.837,203,2.702,204,1.837,205,1.837,206,3.517,207,1.551,208,1.837,209,1.837,210,2.57,211,2.518,212,1.837,213,1.837,214,1.837,215,1.837,216,1.837,217,1.837,218,1.551,219,1.837,220,1.837,221,1.837,222,1.837,223,2.928,224,1.837,225,1.837,226,3.292,227,1.837,228,1.837,229,1.837,230,1.837,231,1.837,232,3.652,233,2.773,234,1.837,235,1.837,236,1.363,237,1.551,238,3.844,239,2.928,240,2.173,241,1.837,242,1.363,243,2.021,244,1.551,245,0.936,246,1.363,247,1.222,248,2.473,249,1.551,250,1.222,251,1.837,252,1.837,253,1.837,254,2.473,255,1.837,256,2.928,257,1.837,258,1.837,259,1.837,260,5.286,261,1.837,262,1.837,263,1.837,264,1.837,265,2.817,266,1.837,267,1.837,268,0.936,269,1.551,270,1.837,271,1.363,272,0.936,273,1.551,274,1.551,275,1.837,276,1.837,277,1.837,278,3.519,279,1.837,280,1.837,281,1.837,282,1.551,283,1.837,284,1.837,285,1.837]],["title/classes/CvEntity.html",[0,0.059,245,1.716]],["body/classes/CvEntity.html",[0,0.047,2,1.023,3,0.196,4,0.17,5,0.17,8,0.25,9,1.391,10,2.798,11,3.436,12,3.436,13,3.436,14,1.325,15,2.798,16,0.795,17,0.027,18,2.471,19,1.937,21,0.859,25,1.975,32,0.429,41,0.196,44,0.01,45,0.015,46,0.01,148,3.385,169,1.629,203,2.072,210,2.184,245,2.002,286,2.276,287,2.612,288,3.41,289,2.372,290,2.913,291,2.913,292,5.292,293,2.695,294,2.695,295,2.276,296,4.296,297,2.695,298,3.91,299,2.695,300,2.695,301,2.695,302,3.91,303,2.695,304,2.695,305,2.4,306,2.695,307,3.315,308,3.315,309,3.315,310,3.926,311,2.695,312,2.798,313,2,314,3.91,315,2.276,316,2,317,2.276,318,2,319,2.276,320,3.926,321,2.276,322,1.374,323,2.276,324,2.695,325,2.695,326,2.695,327,2.695,328,2.276]],["title/injectables/CvListener.html",[182,0.545,329,2.034]],["body/injectables/CvListener.html",[0,0.064,3,0.267,4,0.232,5,0.232,8,0.34,14,1.142,16,0.61,17,0.027,19,1.133,21,0.667,32,0.539,41,0.267,44,0.014,45,0.019,46,0.014,76,1.404,80,1.058,81,0.693,86,2.129,87,1.605,117,1.609,118,1.609,141,2.439,142,2.439,182,0.788,183,1.298,191,2.215,192,3.02,265,2.028,329,2.938,330,3.095,331,4.863,332,3.665,333,3.441,334,3.665,335,4.863,336,4.863,337,3.665,338,2.439,339,3.665,340,2.439,341,3.095,342,3.665,343,3.665,344,3.665,345,3.665,346,3.665,347,3.665,348,2.938,349,2.439,350,3.665,351,2.215,352,3.665,353,3.095,354,3.665,355,3.095,356,3.095,357,3.665]],["title/modules/CvModule.html",[94,1.371,102,2.034]],["body/modules/CvModule.html",[0,0.062,3,0.259,4,0.225,5,0.225,17,0.027,32,0.594,41,0.259,44,0.014,45,0.018,46,0.014,74,2.089,81,0.673,94,1.944,96,1.68,97,2.251,102,4.021,103,3.413,105,3.413,106,2.64,107,1.971,108,1.971,110,2.883,111,3.175,121,3.008,134,2.643,135,1.816,137,3.008,143,3.008,171,3.008,188,3.58,243,3.413,244,3.008,245,1.816,246,2.643,329,3.727,358,3.008,359,3.562,360,3.008,361,3.562,362,3.562,363,3.562,364,3.562]],["title/injectables/CvService.html",[182,0.545,243,1.863]],["body/injectables/CvService.html",[0,0.024,1,2.12,3,0.1,4,0.087,5,0.087,8,0.128,10,0.833,14,1.225,16,0.616,17,0.027,18,2.56,21,0.696,32,0.484,41,0.1,44,0.005,45,0.009,46,0.005,55,0.833,58,1.165,60,1.541,61,1.657,76,0.669,80,1.418,81,0.261,86,1.014,87,1.536,92,1.797,117,1.678,118,1.678,135,0.703,141,0.918,142,0.918,182,0.375,183,0.489,191,3.791,192,3.418,193,1.956,194,1.956,197,1.956,200,1.956,201,1.956,203,2.467,206,2.817,207,1.956,210,2.616,211,2.363,218,1.956,226,2.719,243,1.282,245,0.703,246,1.023,247,0.918,248,1.956,249,1.165,265,3.069,268,2.504,269,1.165,271,1.023,272,1.993,273,1.165,274,1.956,322,0.703,340,0.918,341,1.165,348,0.833,349,1.541,365,1.165,366,2.316,367,2.316,368,2.316,369,2.316,370,1.379,371,2.334,372,2.294,373,2.994,374,3.508,375,2.994,376,3.575,377,1.379,378,2.316,379,2.316,380,1.379,381,1.379,382,2.316,383,1.379,384,2.316,385,1.379,386,1.379,387,2.316,388,1.379,389,2.316,390,3.508,391,1.379,392,0.833,393,0.833,394,1.379,395,1.719,396,2.316,397,1.379,398,2.316,399,1.379,400,1.379,401,1.379,402,1.992,403,3.302,404,1.023,405,0.918,406,1.023,407,1.023,408,1.379,409,1.165,410,1.379,411,1.379,412,2.316,413,1.379,414,1.379,415,1.379,416,2.316,417,1.379,418,2.316,419,1.379,420,1.379,421,1.379,422,2.994,423,2.228,424,1.956,425,2.962,426,2.528,427,2.603,428,1.719,429,1.956,430,1.956,431,2.994,432,1.379,433,1.379,434,1.379,435,1.379,436,1.165,437,1.165,438,1.379,439,1.379,440,3.508,441,1.379,442,1.379,443,2.316,444,1.379,445,1.379,446,1.379,447,1.165,448,1.379,449,1.379,450,1.379,451,1.379,452,1.379,453,1.023,454,1.379,455,1.165,456,1.165,457,1.379,458,1.379,459,1.379,460,1.379,461,1.379,462,1.379,463,1.379,464,1.379,465,1.379,466,1.379,467,1.379,468,1.379,469,1.379,470,1.379,471,1.379,472,1.379,473,1.379,474,1.379,475,1.379,476,1.379,477,1.379,478,1.379,479,1.379,480,1.379,481,1.379,482,1.379,483,1.379,484,1.379,485,1.379,486,1.379]],["title/injectables/DurationInterceptor.html",[182,0.545,487,2.24]],["body/injectables/DurationInterceptor.html",[0,0.065,3,0.271,4,0.236,5,0.236,8,0.345,14,0.875,16,0.467,17,0.027,21,0.511,32,0.51,41,0.271,44,0.014,45,0.019,46,0.014,76,1.419,80,1.075,81,0.704,92,1.319,117,1.232,118,1.232,174,2.478,182,0.796,183,1.319,268,2.506,487,3.271,488,3.145,489,4.915,490,4.915,491,4.94,492,4.081,493,5.85,494,3.725,495,3.145,496,5.501,497,4.915,498,3.145,499,4.915,500,3.145,501,5.501,502,4.915,503,4.915,504,3.725,505,3.725,506,5.501,507,3.725,508,3.725,509,3.725,510,3.725]],["title/injectables/FirstMiddleware.html",[126,2.24,182,0.545]],["body/injectables/FirstMiddleware.html",[0,0.07,3,0.294,4,0.256,5,0.256,8,0.375,14,0.949,16,0.507,17,0.026,21,0.554,32,0.481,41,0.294,44,0.015,45,0.02,46,0.015,76,1.497,80,1.167,81,0.764,117,1.337,118,1.337,126,3.449,174,2.689,182,0.84,183,1.432,272,2.06,492,4.478,511,3.413,512,5.183,513,5.183,514,4.016,515,4.245,516,4.478,517,4.832,518,4.041,519,2.998,520,3.413,521,5.183,522,2.998,523,4.041,524,3.413,525,4.041,526,4.041]],["title/classes/GetPaginatedTodoDto.html",[0,0.059,527,2.24]],["body/classes/GetPaginatedTodoDto.html",[0,0.101,2,1.568,3,0.3,4,0.261,5,0.261,8,0.383,9,1.861,16,0.788,17,0.026,18,2.812,19,1.624,21,0.72,32,0.487,34,4.288,35,4.288,39,2.105,40,2.495,41,0.3,44,0.016,45,0.02,46,0.016,49,3.064,527,3.496,528,4.88,529,4.288,530,5.78,531,5.78,532,5.255,533,4.129,534,4.129]],["title/injectables/JwtAuthGuard.html",[182,0.545,250,2.24]],["body/injectables/JwtAuthGuard.html",[0,0.084,3,0.353,4,0.307,5,0.307,17,0.026,32,0.538,41,0.353,44,0.019,45,0.022,46,0.019,81,0.917,182,0.94,183,1.718,250,3.861,287,3.226,535,4.094,536,4.094,537,4.848,538,3.226,539,4.848]],["title/injectables/JwtStrategy.html",[182,0.545,540,2.034]],["body/injectables/JwtStrategy.html",[0,0.051,3,0.214,4,0.186,5,0.186,8,0.272,14,0.981,16,0.524,17,0.027,21,0.573,32,0.567,41,0.214,44,0.011,45,0.016,46,0.011,55,1.776,60,1.955,76,1.206,80,0.848,81,0.556,84,4.907,85,1.955,86,1.829,87,1.829,92,1.041,117,1.382,118,1.382,135,1.498,169,1.776,182,0.677,183,1.041,192,2.69,203,2.278,211,1.776,236,3.099,265,1.626,268,1.498,272,2.478,287,1.955,305,1.386,322,1.498,338,1.955,349,1.955,371,3.522,403,3.527,404,2.18,422,1.955,423,1.386,428,3.099,453,2.18,514,1.955,538,1.955,540,2.524,541,4.104,542,2.481,543,4.861,544,2.938,545,4.104,546,2.938,547,4.177,548,3.522,549,2.938,550,2.938,551,2.938,552,2.481,553,1.955,554,2.938,555,2.938,556,1.955,557,2.938,558,2.481,559,2.938,560,2.938,561,2.938,562,2.938,563,2.938,564,2.938,565,2.938,566,2.938,567,2.938,568,2.938,569,2.938,570,2.938,571,2.938,572,3.234,573,4.177,574,2.938,575,2.481,576,3.527,577,2.938,578,2.481,579,2.481,580,2.938,581,2.481,582,1.955,583,2.18]],["title/classes/LoginCredentialsDto.html",[0,0.059,584,2.034]],["body/classes/LoginCredentialsDto.html",[0,0.095,2,1.664,3,0.319,4,0.277,5,0.277,8,0.406,9,1.933,16,0.684,17,0.026,19,1.686,21,0.748,25,2.056,32,0.406,33,3.864,39,2.234,41,0.319,44,0.017,45,0.021,46,0.017,157,3.287,160,3.59,584,3.297,585,5.016,586,3.701,587,4.383,588,4.383]],["title/modules/MailModule.html",[94,1.371,103,1.863]],["body/modules/MailModule.html",[0,0.061,3,0.257,4,0.223,5,0.223,15,2.132,17,0.027,32,0.554,41,0.257,44,0.014,45,0.018,46,0.014,81,0.667,94,1.931,96,1.665,97,2.237,103,3.477,106,2.624,107,1.953,108,1.953,110,2.865,111,2.348,112,2.618,148,2.348,203,1.438,333,3.65,423,2.526,455,2.98,589,2.98,590,2.98,591,2.98,592,3.529,593,3.529,594,3.529,595,3.518,596,2.618,597,4.741,598,3.529,599,2.98,600,3.529,601,4.741,602,3.529,603,3.529,604,3.529,605,3.529,606,3.529,607,3.529,608,3.529,609,3.529,610,2.98,611,3.529,612,3.529,613,3.529,614,3.529,615,3.529,616,3.529,617,2.98,618,3.529,619,3.529]],["title/injectables/MailService.html",[182,0.545,333,1.863]],["body/injectables/MailService.html",[0,0.065,3,0.272,4,0.236,5,0.236,8,0.347,14,1.157,16,0.469,17,0.026,21,0.675,32,0.457,41,0.272,44,0.014,45,0.019,46,0.014,76,1.422,80,1.079,81,0.707,86,2.157,87,1.636,117,1.629,118,1.629,182,0.798,183,1.324,191,2.977,192,3.049,265,2.068,333,2.726,338,3.278,348,2.258,423,1.763,456,3.156,495,3.156,595,2.773,596,2.773,610,3.156,620,3.156,621,4.926,622,3.737,623,6.251,624,3.737,625,4.926,626,3.737,627,3.737,628,3.737,629,3.737,630,3.737,631,3.737,632,3.737,633,3.737,634,3.737,635,3.737,636,3.737,637,3.737,638,3.737,639,3.737,640,3.737,641,3.737,642,3.737,643,3.737]],["title/interfaces/PayloadInterface.html",[548,2.24,644,2.24]],["body/interfaces/PayloadInterface.html",[3,0.329,4,0.286,5,0.286,8,0.419,9,1.97,16,0.755,17,0.025,25,2.241,41,0.329,44,0.017,45,0.021,46,0.017,157,3.478,351,3.798,548,3.701,644,3.009,645,4.522,646,3.818,647,4.663]],["title/classes/TimestampEntites.html",[0,0.059,288,2.034]],["body/classes/TimestampEntites.html",[0,0.072,2,1.562,3,0.299,4,0.26,5,0.26,8,0.382,9,1.857,16,0.724,17,0.026,19,1.783,21,0.791,32,0.382,41,0.299,44,0.016,45,0.02,46,0.016,169,3.168,288,3.168,289,3.487,290,4.281,291,4.281,312,3.877,313,3.052,316,4.281,318,4.281,322,2.098,328,3.474,648,3.474,649,4.114,650,4.114,651,4.114,652,5.242]],["title/classes/Todo.html",[0,0.059,176,1.863]],["body/classes/Todo.html",[0,0.076,2,1.658,3,0.318,4,0.276,5,0.276,8,0.405,9,1.928,14,1.393,16,0.778,17,0.026,18,2.383,21,0.851,25,2.054,41,0.318,44,0.017,45,0.021,46,0.017,50,3.946,176,3.012,210,2.797,289,3.583,312,3.289,653,3.687,654,4.366,655,4.366,656,4.366,657,4.366]],["title/controllers/TodoController.html",[72,1.474,658,2.24]],["body/controllers/TodoController.html",[0,0.035,3,0.146,4,0.127,5,0.127,8,0.187,14,1.238,16,0.597,17,0.027,19,1.629,21,0.723,32,0.542,41,0.146,44,0.008,45,0.012,46,0.008,47,2.649,55,1.901,61,1.741,72,0.881,74,0.881,76,0.909,80,1.522,81,0.38,86,0.881,87,0.881,92,1.787,117,1.744,118,1.744,176,3.104,190,1.492,210,2.574,233,2.917,236,1.492,237,1.698,238,3.702,240,2.876,242,1.492,247,1.338,272,1.025,278,3.273,282,2.657,348,1.901,402,1.338,423,0.949,487,1.338,500,1.698,514,3.357,515,2.335,516,4.048,517,1.698,519,2.335,522,2.335,524,1.698,527,2.917,529,1.492,572,1.338,582,1.338,658,2.094,659,1.698,660,3.273,661,3.273,662,3.273,663,3.273,664,3.876,665,3.876,666,3.876,667,1.698,668,2.011,669,4.26,670,1.698,671,2.011,672,1.698,673,3.146,674,2.011,675,2.011,676,2.011,677,3.146,678,2.011,679,3.146,680,2.011,681,2.011,682,3.273,683,3.146,684,2.011,685,2.011,686,3.252,687,3.146,688,2.011,689,3.146,690,2.011,691,2.011,692,2.011,693,2.011,694,3.146,695,2.011,696,1.698,697,2.011,698,2.011,699,2.657,700,2.145,701,1.698,702,2.011,703,2.011,704,2.011,705,2.011,706,2.094,707,2.011,708,2.011,709,2.011,710,2.011,711,2.011,712,3.146,713,2.657,714,2.657,715,2.011,716,2.011,717,2.011,718,2.011,719,2.011,720,2.011,721,1.698,722,3.146,723,2.011,724,2.335,725,2.657,726,2.011,727,2.011,728,2.011,729,2.011,730,2.011,731,1.698,732,2.011,733,2.011,734,2.011]],["title/modules/TodoModule.html",[94,1.371,104,2.034]],["body/modules/TodoModule.html",[0,0.075,3,0.314,4,0.273,5,0.273,17,0.026,32,0.547,41,0.314,44,0.017,45,0.021,46,0.017,74,2.366,81,0.816,94,2.201,96,2.036,97,2.549,104,3.925,106,2.991,107,2.389,108,2.389,110,3.265,658,3.925,700,3.594,701,3.645,735,3.645,736,3.645,737,4.316,738,5.404,739,4.316]],["title/injectables/TodoService.html",[182,0.545,700,1.863]],["body/injectables/TodoService.html",[0,0.039,3,0.164,4,0.143,5,0.143,8,0.386,9,1.217,14,1.24,16,0.629,17,0.027,18,2.54,21,0.724,25,0.746,32,0.386,41,0.164,44,0.009,45,0.013,46,0.009,47,2.814,50,2.286,54,2.901,55,1.362,76,0.992,80,1.447,81,0.426,92,1.776,117,1.54,118,1.54,176,3.601,182,0.556,183,0.798,210,2.913,247,1.5,268,2.556,271,1.672,272,2.122,289,1.362,312,1.362,392,1.362,393,1.362,395,1.672,402,1.5,422,2.286,423,1.964,424,2.901,425,3.515,426,2.901,427,2.549,572,1.5,576,1.903,582,1.5,583,1.672,660,2.901,661,2.901,662,2.901,663,3.932,667,2.901,669,4.233,670,2.901,672,2.901,682,3.515,696,1.903,699,1.903,700,1.901,713,1.903,714,3.932,721,1.903,724,1.672,725,1.903,731,1.903,740,1.903,741,3.435,742,2.254,743,2.254,744,3.435,745,2.254,746,2.254,747,2.254,748,2.254,749,2.254,750,2.254,751,2.254,752,2.254,753,2.254,754,3.932,755,2.254,756,2.254,757,2.254,758,2.254,759,2.254,760,2.254,761,2.254,762,2.254,763,2.254,764,2.254,765,2.254,766,2.254,767,2.254,768,2.254,769,2.254,770,2.254,771,2.254,772,2.254,773,1.903,774,2.254,775,2.254,776,2.254,777,3.435,778,3.435,779,3.435,780,3.435]],["title/classes/UpdateCvDto.html",[0,0.059,226,2.034]],["body/classes/UpdateCvDto.html",[0,0.09,2,1.262,3,0.242,4,0.21,5,0.21,7,2.466,8,0.308,9,1.613,10,3.138,11,3.852,12,3.852,13,3.852,14,1.219,15,3.138,16,0.801,17,0.026,18,2.645,19,1.867,21,0.828,22,2.806,24,2.806,25,2.084,27,2.806,28,2.806,29,2.806,30,4.385,31,2.806,32,0.422,33,2.008,34,3.852,35,4.59,36,4.341,37,2.806,38,2.806,39,1.694,40,2.008,41,0.242,42,2.806,43,2.806,44,0.013,45,0.017,46,0.013,226,2.751,781,5.224,782,3.323,783,3.323,784,3.323]],["title/injectables/UpperAndFusionPipe.html",[182,0.545,706,2.24]],["body/injectables/UpperAndFusionPipe.html",[0,0.072,3,0.299,4,0.26,5,0.26,8,0.382,14,0.966,16,0.724,17,0.026,21,0.564,25,1.361,32,0.382,41,0.299,44,0.016,45,0.02,46,0.016,76,1.514,80,1.188,81,0.778,92,1.857,117,1.361,118,1.361,174,2.738,182,0.849,183,1.457,233,2.738,686,3.052,706,3.488,785,4.427,786,3.474,787,5.242,788,5.242,789,5.242,790,4.872,791,6.076,792,4.114,793,5.242,794,5.242,795,4.114,796,4.114]],["title/controllers/UserController.html",[72,1.474,797,2.24]],["body/controllers/UserController.html",[0,0.058,3,0.244,4,0.212,5,0.212,8,0.311,14,1.076,16,0.574,17,0.027,19,1.612,21,0.715,32,0.544,41,0.244,44,0.013,45,0.018,46,0.013,72,1.468,74,1.468,76,1.322,80,1.506,81,0.634,86,1.468,87,1.468,92,1.848,117,1.515,118,1.515,190,2.488,203,1.366,206,3.047,233,3.471,240,3.87,242,2.488,305,1.581,372,2.659,556,2.231,584,3.387,797,3.047,798,2.831,799,4.733,800,4.405,801,4.405,802,4.58,803,3.353,804,2.831,805,4.58,806,3.353,807,3.867,808,2.831,809,3.387,810,3.353,811,3.867,812,3.353,813,2.831,814,2.831,815,2.831,816,2.831,817,2.831,818,3.353,819,3.353,820,3.353,821,3.353]],["title/classes/UserEntity.html",[0,0.059,305,1.588]],["body/classes/UserEntity.html",[0,0.067,2,1.004,3,0.192,4,0.167,5,0.167,8,0.245,9,1.372,16,0.792,17,0.027,18,1.696,19,1.903,21,0.844,25,2.037,32,0.498,40,1.599,41,0.192,44,0.01,45,0.015,46,0.01,148,3.952,157,2.535,160,2.768,169,1.599,191,1.599,210,2.161,245,2.571,287,2.577,288,3.388,289,2.34,290,2.873,291,2.873,292,4.734,295,2.234,296,3.27,298,3.868,302,2.234,305,1.827,307,3.27,308,3.27,309,3.27,312,2.768,313,1.963,314,3.868,315,2.234,316,1.963,317,2.234,318,1.963,319,2.234,321,2.234,322,1.349,323,2.234,351,2.768,392,2.34,405,3.048,406,1.963,407,1.963,647,3.399,822,2.234,823,4.581,824,4.581,825,2.645,826,2.645,827,2.645,828,2.645,829,2.645,830,3.873,831,2.645,832,2.645,833,5.042,834,2.645,835,2.645,836,3.868,837,2.645,838,3.873,839,2.645,840,4.581,841,2.645,842,2.645,843,2.645]],["title/modules/UserModule.html",[94,1.371,105,1.863]],["body/modules/UserModule.html",[0,0.06,3,0.251,4,0.218,5,0.218,17,0.027,32,0.597,41,0.251,44,0.013,45,0.018,46,0.013,74,2.042,81,0.651,94,1.9,96,1.624,97,2.2,105,3.563,106,2.581,107,1.906,108,1.906,110,2.818,111,2.291,112,3.46,134,2.555,135,1.756,305,1.624,372,3.374,538,2.291,540,3.69,553,2.291,556,2.291,797,3.519,815,2.908,844,2.908,845,2.908,846,2.908,847,3.444,848,3.444,849,3.444,850,3.444,851,2.555,852,3.938,853,3.444,854,3.444,855,3.444,856,3.444,857,3.444,858,3.444,859,3.444,860,3.444,861,3.444,862,3.444,863,3.444,864,3.444]],["title/injectables/UserService.html",[182,0.545,372,1.716]],["body/injectables/UserService.html",[0,0.033,3,0.14,4,0.121,5,0.121,8,0.178,14,1.093,16,0.536,17,0.027,21,0.638,32,0.513,41,0.14,44,0.007,45,0.012,46,0.007,60,2.502,61,1.679,76,0.876,80,1.234,81,0.363,86,1.328,87,1.328,92,1.648,117,1.539,118,1.539,128,1.278,135,0.979,157,2.972,160,2.582,182,0.491,183,0.68,192,3.059,203,2.187,206,2.843,210,0.906,211,1.16,265,2.972,268,2.522,272,2.522,305,0.906,322,0.979,338,1.278,348,1.16,349,2.019,351,2.273,353,1.621,355,1.621,356,1.621,371,2.843,372,1.547,392,1.16,393,1.16,402,1.278,404,1.424,405,1.278,406,1.424,407,1.424,422,2.502,423,1.774,427,1.424,428,2.79,430,4.177,436,3.176,437,1.621,447,1.621,453,3.17,545,2.562,553,2.019,556,1.278,558,1.621,572,2.502,575,1.621,578,3.176,579,2.562,581,2.562,582,2.019,583,2.251,584,2.582,617,2.562,647,2.251,724,1.424,773,1.621,799,2.562,800,3.608,801,2.562,804,2.562,807,2.562,808,2.562,809,2.582,811,2.562,813,1.621,814,1.621,816,1.621,817,1.621,836,1.621,851,1.424,865,1.621,866,3.034,867,1.92,868,5.18,869,1.92,870,3.034,871,4.273,872,1.92,873,3.034,874,1.92,875,1.92,876,1.92,877,1.92,878,1.92,879,1.92,880,2.562,881,1.92,882,1.92,883,1.92,884,1.92,885,1.92,886,1.92,887,1.92,888,3.034,889,3.034,890,3.761,891,3.761,892,3.034,893,1.92,894,1.92,895,1.92,896,1.92,897,1.92,898,1.92,899,1.92,900,1.92,901,1.92,902,1.92,903,3.034,904,3.034,905,1.92,906,1.92,907,1.92,908,3.034,909,1.92,910,1.92,911,1.92,912,1.92,913,1.92,914,1.92,915,1.92,916,1.92]],["title/classes/UserSubscribeDto.html",[0,0.059,809,2.034]],["body/classes/UserSubscribeDto.html",[0,0.091,2,1.568,3,0.3,4,0.261,5,0.261,8,0.383,9,1.861,16,0.725,17,0.026,19,1.786,21,0.792,25,2.124,32,0.383,33,3.88,39,2.105,41,0.3,44,0.016,45,0.02,46,0.016,157,3.199,160,3.493,351,3.493,809,3.175,917,5.137,918,3.487,919,4.129,920,4.129,921,4.129,922,4.129,923,5.255]],["title/coverage.html",[924,3.407]],["body/coverage.html",[0,0.108,1,1.656,5,0.173,6,2.314,7,2.948,16,0.344,17,0.026,44,0.01,45,0.015,46,0.01,47,1.656,48,2.314,49,2.948,72,2.245,73,1.824,75,2.314,82,1.517,126,1.824,128,1.824,176,1.517,182,1.019,184,2.314,188,1.824,189,2.314,203,1.116,226,1.656,243,1.517,245,1.397,250,1.824,286,2.314,288,1.656,305,1.293,329,1.656,330,2.314,333,1.517,340,1.824,365,2.314,372,1.397,395,5.091,423,1.293,487,1.824,488,2.314,511,2.314,520,3.356,527,1.824,528,2.314,529,2.033,535,2.314,536,2.314,540,1.656,541,2.314,542,2.314,548,1.824,584,1.656,585,2.314,586,2.314,620,2.314,644,1.824,646,2.314,648,2.314,653,2.314,658,1.824,659,2.314,700,1.517,706,1.824,740,2.314,781,2.314,785,2.314,786,2.314,797,1.824,798,2.314,809,1.656,822,2.314,865,2.314,917,2.314,918,2.314,924,2.033,925,2.741,926,2.741,927,2.741,928,5.127,929,5.443,930,2.314,931,3.356,932,5.676,933,2.314,934,4.675,935,5.676,936,2.741,937,3.974,938,4.675,939,2.741,940,2.314,941,2.314,942,2.314,943,2.741,944,2.741,945,2.741,946,2.741,947,2.741]],["title/dependencies.html",[97,1.91,948,2.812]],["body/dependencies.html",[0,0.083,17,0.027,39,1.816,40,2.152,44,0.014,45,0.018,46,0.014,81,0.673,85,2.37,97,1.68,131,3.58,132,3.008,135,1.816,141,2.37,142,2.37,145,3.008,151,3.008,254,3.008,322,1.816,376,3.008,409,3.008,498,3.008,522,3.54,538,2.37,552,4.029,553,3.175,595,2.643,596,2.643,790,3.008,851,2.643,852,3.008,880,3.008,949,3.562,950,3.562,951,4.771,952,3.562,953,3.562,954,5.38,955,3.562,956,3.562,957,5.38,958,3.562,959,3.562,960,3.562,961,3.562,962,3.562,963,3.562,964,3.562,965,3.562,966,3.562,967,3.562,968,3.562,969,3.562,970,3.562,971,3.562,972,3.562,973,3.562,974,3.562,975,3.562,976,3.562,977,3.562,978,3.562,979,3.562,980,3.562,981,3.562,982,3.562,983,3.562,984,3.562,985,3.562,986,3.562,987,3.562]],["title/miscellaneous/enumerations.html",[988,1.556,989,3.418]],["body/miscellaneous/enumerations.html",[8,0.463,17,0.025,44,0.019,45,0.023,46,0.019,203,2.406,393,3.57,405,3.931,429,4.988,988,2.765,989,4.22,990,4.997,991,5.907,992,4.997]],["title/miscellaneous/functions.html",[988,1.556,993,3.418]],["body/miscellaneous/functions.html",[8,0.472,17,0.023,44,0.019,45,0.023,46,0.019,930,4.295,931,5.7,941,4.295,988,2.815,993,4.295,994,5.086,995,5.086]],["title/index.html",[8,0.261,996,2.812,997,2.812]],["body/index.html",[4,0.236,17,0.026,44,0.014,45,0.019,46,0.014,50,2.478,131,3.66,371,2.478,599,3.145,924,2.764,998,3.725,999,3.725,1000,4.915,1001,3.725,1002,3.725,1003,3.725,1004,3.725,1005,3.725,1006,3.725,1007,3.725,1008,3.725,1009,3.725,1010,3.725,1011,3.725,1012,3.725,1013,6.369,1014,3.725,1015,3.725,1016,3.725,1017,6.246,1018,3.725,1019,3.725,1020,4.915,1021,3.725,1022,3.725,1023,3.725,1024,3.725,1025,4.915,1026,4.915,1027,3.725,1028,3.725,1029,3.725,1030,4.915,1031,4.915,1032,3.725,1033,3.725,1034,3.725,1035,3.725,1036,3.725,1037,3.145,1038,3.725,1039,3.725,1040,3.725,1041,3.725,1042,3.725,1043,3.725,1044,3.725,1045,3.725,1046,3.725,1047,3.725,1048,3.725,1049,3.725,1050,3.725,1051,3.725,1052,3.725,1053,3.725,1054,3.725]],["title/modules.html",[96,2.166]],["body/modules.html",[17,0.022,44,0.018,45,0.022,46,0.018,95,3.199,96,2.268,102,2.905,103,2.661,104,2.905,105,2.661,1037,5.543,1055,6.564,1056,6.564,1057,6.564]],["title/overview.html",[1058,3.878]],["body/overview.html",[2,1.288,17,0.026,44,0.013,45,0.018,46,0.013,74,1.485,82,3.442,95,4.422,96,1.6,97,2.178,98,2.865,99,2.865,100,2.865,101,2.865,102,3.959,103,3.442,104,3.561,105,3.552,106,2.555,107,1.877,108,1.877,183,1.202,243,2.904,329,3.171,333,3.442,358,2.865,360,2.865,372,3.171,540,3.171,589,2.865,590,2.865,591,2.865,644,2.257,700,2.904,735,2.865,736,2.865,754,2.865,844,2.865,845,2.865,846,2.865,1058,2.865,1059,3.393,1060,3.393,1061,3.393,1062,3.393]],["title/miscellaneous/variables.html",[988,1.556,1063,3.418]],["body/miscellaneous/variables.html",[8,0.394,16,0.533,17,0.027,44,0.016,45,0.021,46,0.016,92,1.506,128,3.562,203,2.181,211,2.57,268,2.168,340,3.562,392,3.54,393,3.54,491,3.591,492,3.972,514,3.562,515,3.155,516,3.155,519,3.155,686,3.155,933,3.591,940,3.591,942,3.591,988,2.353,1063,3.591,1064,4.252,1065,4.252,1066,4.252,1067,4.252,1068,4.252,1069,4.252,1070,4.252,1071,4.252,1072,4.252,1073,4.252,1074,4.252,1075,4.252]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":395,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":754,"title":{},"body":{"injectables/TodoService.html":{},"overview.html":{}}}],["1.0.0",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1062,"title":{},"body":{"overview.html":{}}}],["10000000",{"_index":435,"title":{},"body":{"injectables/CvService.html":{}}}],["11",{"_index":1061,"title":{},"body":{"overview.html":{}}}],["1].id",{"_index":753,"title":{},"body":{"injectables/TodoService.html":{}}}],["2.0.6",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":264,"title":{},"body":{"controllers/CvController.html":{}}}],["3.0.2",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":864,"title":{},"body":{"modules/UserModule.html":{}}}],["4",{"_index":1060,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1059,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["5.5.3",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":296,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["6",{"_index":62,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["6.0.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":263,"title":{},"body":{"controllers/CvController.html":{}}}],["7.0.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":911,"title":{},"body":{"injectables/UserService.html":{}}}],["actualtodo.id",{"_index":757,"title":{},"body":{"injectables/TodoService.html":{}}}],["adapter",{"_index":614,"title":{},"body":{"modules/MailModule.html":{}}}],["addcv",{"_index":193,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["addcv(addcvdto",{"_index":202,"title":{},"body":{"controllers/CvController.html":{}}}],["addcv(cv",{"_index":379,"title":{},"body":{"injectables/CvService.html":{}}}],["addcvdto",{"_index":1,"title":{"classes/AddCvDto.html":{}},"body":{"classes/AddCvDto.html":{},"controllers/CvController.html":{},"injectables/CvService.html":{},"coverage.html":{}}}],["added",{"_index":630,"title":{},"body":{"injectables/MailService.html":{}}}],["addedcvmail",{"_index":621,"title":{},"body":{"injectables/MailService.html":{}}}],["addedcvmail(payload",{"_index":625,"title":{},"body":{"injectables/MailService.html":{}}}],["addtodo",{"_index":660,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["addtodo(newtodo",{"_index":667,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["addtododto",{"_index":47,"title":{"classes/AddTodoDto.html":{}},"body":{"classes/AddTodoDto.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["admin",{"_index":429,"title":{},"body":{"injectables/CvService.html":{},"miscellaneous/enumerations.html":{}}}],["age",{"_index":10,"title":{},"body":{"classes/AddCvDto.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvService.html":{},"classes/UpdateCvDto.html":{}}}],["ajouter",{"_index":729,"title":{},"body":{"controllers/TodoController.html":{}}}],["amazing",{"_index":1038,"title":{},"body":{"index.html":{}}}],["anciennes",{"_index":451,"title":{},"body":{"injectables/CvService.html":{}}}],["angular",{"_index":1009,"title":{},"body":{"index.html":{}}}],["app",{"_index":1015,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_interceptor",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":73,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application',this.configservice.get('app_port",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":1006,"title":{},"body":{"index.html":{}}}],["apply(helmetmiddleware).forroutes",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(logger).forroutes",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":95,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":82,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":791,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["as1234as",{"_index":607,"title":{},"body":{"modules/MailModule.html":{}}}],["async",{"_index":192,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/UserService.html":{}}}],["attachments",{"_index":632,"title":{},"body":{"injectables/MailService.html":{}}}],["auth",{"_index":605,"title":{},"body":{"modules/MailModule.html":{}}}],["auth.guard",{"_index":252,"title":{},"body":{"controllers/CvController.html":{}}}],["auth.guard.ts",{"_index":536,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["authguard",{"_index":537,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":539,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["author",{"_index":1047,"title":{},"body":{"index.html":{}}}],["autoloadentities",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["automatiquement",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["avec",{"_index":773,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["await",{"_index":265,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/UserService.html":{}}}],["aymen.noreply@gmail.com",{"_index":606,"title":{},"body":{"modules/MailModule.html":{}}}],["aymen.sellaouti@gmail.com",{"_index":628,"title":{},"body":{"injectables/MailService.html":{}}}],["backers",{"_index":1039,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":880,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":882,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(password",{"_index":909,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(user.password",{"_index":883,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":233,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{}}}],["bonjour",{"_index":636,"title":{},"body":{"injectables/MailService.html":{}}}],["boolean",{"_index":876,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1057,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1055,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1001,"title":{},"body":{"index.html":{}}}],["cache",{"_index":376,"title":{},"body":{"injectables/CvService.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":400,"title":{},"body":{"injectables/CvService.html":{}}}],["cached",{"_index":419,"title":{},"body":{"injectables/CvService.html":{}}}],["cachedcv",{"_index":416,"title":{},"body":{"injectables/CvService.html":{}}}],["cacheid",{"_index":412,"title":{},"body":{"injectables/CvService.html":{}}}],["cacheinterceptor",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"controllers/CvController.html":{}}}],["cachekey",{"_index":234,"title":{},"body":{"controllers/CvController.html":{}}}],["cachekey('cv.get.all",{"_index":261,"title":{},"body":{"controllers/CvController.html":{}}}],["cachemanager",{"_index":375,"title":{},"body":{"injectables/CvService.html":{}}}],["cachemodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{}}}],["cachemodule.register",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{}}}],["cachettl",{"_index":235,"title":{},"body":{"controllers/CvController.html":{}}}],["cachettl(60",{"_index":262,"title":{},"body":{"controllers/CvController.html":{}}}],["caching",{"_index":432,"title":{},"body":{"injectables/CvService.html":{}}}],["callhandler",{"_index":493,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["caractère",{"_index":69,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["caractère'})@maxlength(25",{"_index":63,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["cas",{"_index":460,"title":{},"body":{"injectables/CvService.html":{}}}],["cascade",{"_index":308,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["catch",{"_index":355,"title":{},"body":{"injectables/CvListener.html":{},"injectables/UserService.html":{}}}],["ce",{"_index":453,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["ceux",{"_index":454,"title":{},"body":{"injectables/CvService.html":{}}}],["champ",{"_index":59,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["chercher",{"_index":271,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"injectables/TodoService.html":{}}}],["cin",{"_index":11,"title":{},"body":{"classes/AddCvDto.html":{},"classes/CvEntity.html":{},"classes/UpdateCvDto.html":{}}}],["class",{"_index":0,"title":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"classes/CvEntity.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"classes/UpdateCvDto.html":{},"classes/UserEntity.html":{},"classes/UserSubscribeDto.html":{}},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"classes/CvEntity.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"classes/UpdateCvDto.html":{},"classes/UserEntity.html":{},"classes/UserSubscribeDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":812,"title":{},"body":{"controllers/UserController.html":{}}}],["cluster_appmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cvmodule",{"_index":358,"title":{},"body":{"modules/CvModule.html":{},"overview.html":{}}}],["cluster_cvmodule_imports",{"_index":359,"title":{},"body":{"modules/CvModule.html":{}}}],["cluster_cvmodule_providers",{"_index":360,"title":{},"body":{"modules/CvModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":589,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":590,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":591,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_todomodule",{"_index":735,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_providers",{"_index":736,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":844,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":846,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":845,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":292,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["column()@exclude",{"_index":830,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({length",{"_index":295,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["column({name",{"_index":301,"title":{},"body":{"classes/CvEntity.html":{}}}],["column({type",{"_index":832,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({unique",{"_index":827,"title":{},"body":{"classes/UserEntity.html":{}}}],["compatibility",{"_index":704,"title":{},"body":{"controllers/TodoController.html":{}}}],["config/app.config",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["config/events",{"_index":341,"title":{},"body":{"injectables/CvListener.html":{},"injectables/CvService.html":{}}}],["configmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('secret",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configure",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":879,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception(`le",{"_index":885,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"j",{"_index":343,"title":{},"body":{"injectables/CvListener.html":{}}}],["console.log('cv",{"_index":473,"title":{},"body":{"injectables/CvService.html":{}}}],["console.log('i",{"_index":418,"title":{},"body":{"injectables/CvService.html":{}}}],["console.log('in",{"_index":414,"title":{},"body":{"injectables/CvService.html":{}}}],["console.log('ip",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('je",{"_index":523,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["console.log('name",{"_index":257,"title":{},"body":{"controllers/CvController.html":{}}}],["console.log('payloa",{"_index":352,"title":{},"body":{"injectables/CvListener.html":{}}}],["console.log('port",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('request",{"_index":503,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["console.log('récupérer",{"_index":711,"title":{},"body":{"controllers/TodoController.html":{}}}],["console.log(`request",{"_index":508,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["console.log(e",{"_index":357,"title":{},"body":{"injectables/CvListener.html":{}}}],["console.log(payload",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(user",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":268,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(cvrepository",{"_index":370,"title":{},"body":{"injectables/CvService.html":{}}}],["constructor(mailerservice",{"_index":622,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(mailservice",{"_index":332,"title":{},"body":{"injectables/CvListener.html":{}}}],["constructor(userrepository",{"_index":867,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(firstmiddleware).forroutes('hello",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":635,"title":{},"body":{"injectables/MailService.html":{}}}],["contenttype",{"_index":642,"title":{},"body":{"injectables/MailService.html":{}}}],["contenu",{"_index":717,"title":{},"body":{"controllers/TodoController.html":{}}}],["context",{"_index":495,"title":{},"body":{"injectables/DurationInterceptor.html":{},"injectables/MailService.html":{}}}],["controller",{"_index":72,"title":{"controllers/AppController.html":{},"controllers/CvController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CvController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('cv",{"_index":255,"title":{},"body":{"controllers/CvController.html":{}}}],["controller('todo",{"_index":710,"title":{},"body":{"controllers/TodoController.html":{}}}],["controller('user",{"_index":818,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CvController.html":{},"modules/CvModule.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correct",{"_index":907,"title":{},"body":{"injectables/UserService.html":{}}}],["count",{"_index":744,"title":{},"body":{"injectables/TodoService.html":{}}}],["count(cv.id",{"_index":483,"title":{},"body":{"injectables/CvService.html":{}}}],["coverage",{"_index":924,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created",{"_index":504,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["createdat",{"_index":289,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/UserEntity.html":{}}}],["createdatecolumn",{"_index":652,"title":{},"body":{"classes/TimestampEntites.html":{}}}],["createdatecolumn({update",{"_index":313,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{}}}],["createparamdecorator",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":807,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credentials.dto",{"_index":817,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credentials.dto.ts",{"_index":586,"title":{},"body":{"classes/LoginCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:6",{"_index":588,"title":{},"body":{"classes/LoginCredentialsDto.html":{}}}],["credentials.dto.ts:9",{"_index":587,"title":{},"body":{"classes/LoginCredentialsDto.html":{}}}],["créer",{"_index":478,"title":{},"body":{"injectables/CvService.html":{}}}],["ctx",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cv",{"_index":191,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/MailService.html":{},"classes/UserEntity.html":{}}}],["cv',cachedcv",{"_index":420,"title":{},"body":{"injectables/CvService.html":{}}}],["cv.add",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cv.age",{"_index":486,"title":{},"body":{"injectables/CvService.html":{}}}],["cv.controller",{"_index":362,"title":{},"body":{"modules/CvModule.html":{}}}],["cv.dto",{"_index":248,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["cv.dto.ts",{"_index":7,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{},"coverage.html":{}}}],["cv.dto.ts:12",{"_index":27,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["cv.dto.ts:19",{"_index":22,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["cv.dto.ts:24",{"_index":24,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["cv.dto.ts:28",{"_index":28,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["cv.dto.ts:32",{"_index":31,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["cv.dto.ts:8",{"_index":29,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["cv.service",{"_index":244,"title":{},"body":{"controllers/CvController.html":{},"modules/CvModule.html":{}}}],["cv.user",{"_index":843,"title":{},"body":{"classes/UserEntity.html":{}}}],["cv/cv.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["cv/entities/cv.entity",{"_index":839,"title":{},"body":{"classes/UserEntity.html":{}}}],["cv_add",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cvcontroller",{"_index":188,"title":{"controllers/CvController.html":{}},"body":{"controllers/CvController.html":{},"modules/CvModule.html":{},"coverage.html":{}}}],["cventity",{"_index":245,"title":{"classes/CvEntity.html":{}},"body":{"controllers/CvController.html":{},"classes/CvEntity.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["cvlistener",{"_index":329,"title":{"injectables/CvListener.html":{}},"body":{"injectables/CvListener.html":{},"modules/CvModule.html":{},"coverage.html":{},"overview.html":{}}}],["cvmodule",{"_index":102,"title":{"modules/CvModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules.html":{},"overview.html":{}}}],["cvrepository",{"_index":378,"title":{},"body":{"injectables/CvService.html":{}}}],["cvs",{"_index":823,"title":{},"body":{"classes/UserEntity.html":{}}}],["cvservice",{"_index":243,"title":{"injectables/CvService.html":{}},"body":{"controllers/CvController.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"coverage.html":{},"overview.html":{}}}],["cvtech',//process.env.db_name",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["cvtoremove",{"_index":469,"title":{},"body":{"injectables/CvService.html":{}}}],["d",{"_index":347,"title":{},"body":{"injectables/CvListener.html":{}}}],["d'id",{"_index":425,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{}}}],["dans",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TodoService.html":{}}}],["data",{"_index":686,"title":{},"body":{"controllers/TodoController.html":{},"injectables/UpperAndFusionPipe.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":312,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/UserEntity.html":{}}}],["date.now",{"_index":502,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["datein",{"_index":501,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["dateout",{"_index":506,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["de",{"_index":61,"title":{},"body":{"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"controllers/CvController.html":{},"injectables/CvService.html":{},"controllers/TodoController.html":{},"injectables/UserService.html":{}}}],["debug",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":19,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/TimestampEntites.html":{},"controllers/TodoController.html":{},"classes/UpdateCvDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"classes/UserSubscribeDto.html":{}}}],["decorators/user.decorator",{"_index":253,"title":{},"body":{"controllers/CvController.html":{}}}],["default",{"_index":392,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":608,"title":{},"body":{"modules/MailModule.html":{}}}],["defaultstrategy",{"_index":858,"title":{},"body":{"modules/UserModule.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"injectables/MailService.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["delete",{"_index":236,"title":{},"body":{"controllers/CvController.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{}}}],["delete(':id",{"_index":282,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{}}}],["delete(':id')@useguards(jwtauthguard",{"_index":208,"title":{},"body":{"controllers/CvController.html":{}}}],["deletecv",{"_index":194,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["deletecv(id",{"_index":207,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["deletedat",{"_index":290,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{}}}],["deletedatecolumn",{"_index":316,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{}}}],["deletetodo",{"_index":661,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["deletetodo(id",{"_index":670,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["dependencies",{"_index":97,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":713,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/AddTodoDto.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"index.html":{}}}],["development",{"_index":1016,"title":{},"body":{"index.html":{}}}],["dir",{"_index":611,"title":{},"body":{"modules/MailModule.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["doivent",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["donc",{"_index":464,"title":{},"body":{"injectables/CvService.html":{}}}],["dotenv",{"_index":852,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":855,"title":{},"body":{"modules/UserModule.html":{}}}],["dto/add",{"_index":247,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["dto/get",{"_index":698,"title":{},"body":{"controllers/TodoController.html":{}}}],["dto/login",{"_index":816,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":249,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["dto/user",{"_index":813,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["du",{"_index":58,"title":{},"body":{"classes/AddTodoDto.html":{},"injectables/CvService.html":{}}}],["duration",{"_index":509,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["durationinterceptor",{"_index":487,"title":{"injectables/DurationInterceptor.html":{}},"body":{"injectables/DurationInterceptor.html":{},"controllers/TodoController.html":{},"coverage.html":{}}}],["déclenche",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["déclencher",{"_index":770,"title":{},"body":{"injectables/TodoService.html":{}}}],["e",{"_index":356,"title":{},"body":{"injectables/CvListener.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1027,"title":{},"body":{"index.html":{}}}],["eager",{"_index":310,"title":{},"body":{"classes/CvEntity.html":{}}}],["ecoute",{"_index":344,"title":{},"body":{"injectables/CvListener.html":{}}}],["efficient",{"_index":1002,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":616,"title":{},"body":{"modules/MailModule.html":{}}}],["email",{"_index":351,"title":{},"body":{"injectables/CvListener.html":{},"interfaces/PayloadInterface.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["emitter",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"dependencies.html":{}}}],["en",{"_index":456,"title":{},"body":{"injectables/CvService.html":{},"injectables/MailService.html":{}}}],["end",{"_index":507,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["ensuite",{"_index":448,"title":{},"body":{"injectables/CvService.html":{}}}],["entit",{"_index":463,"title":{},"body":{"injectables/CvService.html":{}}}],["entites/user.entity",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["entities/cv.entity",{"_index":246,"title":{},"body":{"controllers/CvController.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{}}}],["entities/todo.entity",{"_index":696,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["entity",{"_index":321,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["entity('cv",{"_index":325,"title":{},"body":{"classes/CvEntity.html":{}}}],["entity('user",{"_index":841,"title":{},"body":{"classes/UserEntity.html":{}}}],["entry",{"_index":793,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["entry.data.map((element)=>element.touppercase()).join",{"_index":796,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["enum",{"_index":833,"title":{},"body":{"classes/UserEntity.html":{}}}],["enumerations",{"_index":989,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/user",{"_index":406,"title":{},"body":{"injectables/CvService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["envoi",{"_index":638,"title":{},"body":{"injectables/MailService.html":{}}}],["erreur",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["erronée",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["errorhttpstatuscode",{"_index":726,"title":{},"body":{"controllers/TodoController.html":{}}}],["est",{"_index":60,"title":{},"body":{"classes/AddTodoDto.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["et",{"_index":349,"title":{},"body":{"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["eventemitter",{"_index":373,"title":{},"body":{"injectables/CvService.html":{}}}],["eventemitter2",{"_index":374,"title":{},"body":{"injectables/CvService.html":{}}}],["eventemittermodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["events",{"_index":340,"title":{},"body":{"injectables/CvListener.html":{},"injectables/CvService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":258,"title":{},"body":{"controllers/CvController.html":{}}}],["exclude",{"_index":840,"title":{},"body":{"classes/UserEntity.html":{}}}],["executioncontext",{"_index":491,"title":{},"body":{"injectables/DurationInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existe",{"_index":766,"title":{},"body":{"injectables/TodoService.html":{}}}],["expiresin",{"_index":863,"title":{},"body":{"modules/UserModule.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["exports",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{}}}],["exports:[mailservice",{"_index":619,"title":{},"body":{"modules/MailModule.html":{}}}],["express",{"_index":522,"title":{},"body":{"injectables/FirstMiddleware.html":{},"controllers/TodoController.html":{},"dependencies.html":{}}}],["exste",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extends",{"_index":287,"title":{},"body":{"classes/CvEntity.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{}}}],["extractjwt",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["faker",{"_index":254,"title":{},"body":{"controllers/CvController.html":{},"dependencies.html":{}}}],["faker.name.name",{"_index":259,"title":{},"body":{"controllers/CvController.html":{}}}],["false",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"classes/CvEntity.html":{},"injectables/JwtStrategy.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{}}}],["fichier",{"_index":639,"title":{},"body":{"injectables/MailService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{}}}],["filename",{"_index":633,"title":{},"body":{"injectables/MailService.html":{}}}],["findall",{"_index":799,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(options",{"_index":870,"title":{},"body":{"injectables/UserService.html":{}}}],["findcvbyid",{"_index":366,"title":{},"body":{"injectables/CvService.html":{}}}],["findcvbyid(id",{"_index":382,"title":{},"body":{"injectables/CvService.html":{}}}],["findindex",{"_index":697,"title":{},"body":{"controllers/TodoController.html":{}}}],["first",{"_index":525,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["firstmiddleware",{"_index":126,"title":{"injectables/FirstMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirstMiddleware.html":{},"coverage.html":{}}}],["firstname",{"_index":12,"title":{},"body":{"classes/AddCvDto.html":{},"classes/CvEntity.html":{},"classes/UpdateCvDto.html":{}}}],["framework",{"_index":1000,"title":{},"body":{"index.html":{}}}],["function",{"_index":520,"title":{},"body":{"injectables/FirstMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":993,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fusion.pipe",{"_index":708,"title":{},"body":{"controllers/TodoController.html":{}}}],["fusion.pipe.ts",{"_index":786,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{},"coverage.html":{}}}],["fusion.pipe.ts:5",{"_index":792,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["generics/timestamp.entites",{"_index":323,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["get(\":id",{"_index":280,"title":{},"body":{"controllers/CvController.html":{}}}],["get('/:id",{"_index":673,"title":{},"body":{"controllers/TodoController.html":{}}}],["get(':id')@useguards(jwtauthguard",{"_index":216,"title":{},"body":{"controllers/CvController.html":{}}}],["get('all",{"_index":802,"title":{},"body":{"controllers/UserController.html":{}}}],["get('faker",{"_index":223,"title":{},"body":{"controllers/CvController.html":{}}}],["get('hello",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["get('recover/:id",{"_index":277,"title":{},"body":{"controllers/CvController.html":{}}}],["get('recover/:id')@useguards(jwtauthguard",{"_index":219,"title":{},"body":{"controllers/CvController.html":{}}}],["get('stats",{"_index":275,"title":{},"body":{"controllers/CvController.html":{}}}],["get('stats')@useguards(jwtauthguard",{"_index":221,"title":{},"body":{"controllers/CvController.html":{}}}],["get('v2",{"_index":679,"title":{},"body":{"controllers/TodoController.html":{}}}],["get()@useguards(jwtauthguard)@useinterceptors(cacheinterceptor)@cachekey('cv.get.all')@cachettl(undefined",{"_index":213,"title":{},"body":{"controllers/CvController.html":{}}}],["get.cv.${id",{"_index":413,"title":{},"body":{"injectables/CvService.html":{}}}],["getallcvs",{"_index":195,"title":{},"body":{"controllers/CvController.html":{}}}],["getallcvs(user",{"_index":212,"title":{},"body":{"controllers/CvController.html":{}}}],["getcv",{"_index":196,"title":{},"body":{"controllers/CvController.html":{}}}],["getcv(id",{"_index":215,"title":{},"body":{"controllers/CvController.html":{}}}],["getcvs",{"_index":367,"title":{},"body":{"injectables/CvService.html":{}}}],["getcvs(user",{"_index":384,"title":{},"body":{"injectables/CvService.html":{}}}],["gethello",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["getpaginatedtododto",{"_index":527,"title":{"classes/GetPaginatedTodoDto.html":{}},"body":{"classes/GetPaginatedTodoDto.html":{},"controllers/TodoController.html":{},"coverage.html":{}}}],["getting",{"_index":996,"title":{"index.html":{}},"body":{}}],["gettodobyid",{"_index":662,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["gettodobyid(id",{"_index":672,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["gettodos",{"_index":663,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["gettodos(mesqueryparams",{"_index":675,"title":{},"body":{"controllers/TodoController.html":{}}}],["gettodosv2",{"_index":664,"title":{},"body":{"controllers/TodoController.html":{}}}],["gettodosv2(request",{"_index":678,"title":{},"body":{"controllers/TodoController.html":{}}}],["global",{"_index":738,"title":{},"body":{"modules/TodoModule.html":{}}}],["gmail",{"_index":604,"title":{},"body":{"modules/MailModule.html":{}}}],["grow",{"_index":1034,"title":{},"body":{"index.html":{}}}],["générée",{"_index":719,"title":{},"body":{"controllers/TodoController.html":{}}}],["handlebars",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":597,"title":{},"body":{"modules/MailModule.html":{}}}],["handlecvadded",{"_index":331,"title":{},"body":{"injectables/CvListener.html":{}}}],["handlecvadded(payload",{"_index":335,"title":{},"body":{"injectables/CvListener.html":{}}}],["hashedpassword",{"_index":908,"title":{},"body":{"injectables/UserService.html":{}}}],["head",{"_index":690,"title":{},"body":{"controllers/TodoController.html":{}}}],["headers",{"_index":691,"title":{},"body":{"controllers/TodoController.html":{}}}],["heavily",{"_index":1007,"title":{},"body":{"index.html":{}}}],["hello",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["helmetmiddleware",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":1044,"title":{},"body":{"index.html":{}}}],["host",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":1051,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":692,"title":{},"body":{"controllers/TodoController.html":{}}}],["httpstatus.not_found",{"_index":727,"title":{},"body":{"controllers/TodoController.html":{}}}],["id",{"_index":210,"title":{},"body":{"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvService.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["if(metadata.type",{"_index":795,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["ignoreexpiration",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/UpperAndFusionPipe.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/TimestampEntites.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":912,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["inherited",{"_index":314,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["inject",{"_index":401,"title":{},"body":{"injectables/CvService.html":{}}}],["inject(cache_manager",{"_index":411,"title":{},"body":{"injectables/CvService.html":{}}}],["injectable",{"_index":182,"title":{"injectables/AppService.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":404,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["injectrepository(cventity",{"_index":410,"title":{},"body":{"injectables/CvService.html":{}}}],["injectrepository(userentity",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["insert",{"_index":327,"title":{},"body":{"classes/CvEntity.html":{}}}],["inspired",{"_index":1008,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1012,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1014,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":489,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["intercept(context",{"_index":490,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["interceptors/duration.interceptor",{"_index":709,"title":{},"body":{"controllers/TodoController.html":{}}}],["interface",{"_index":644,"title":{"interfaces/PayloadInterface.html":{}},"body":{"interfaces/PayloadInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":645,"title":{},"body":{"interfaces/PayloadInterface.html":{}}}],["interfaces/payload.interface",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isemail",{"_index":923,"title":{},"body":{"classes/UserSubscribeDto.html":{}}}],["isemail()@isnotempty",{"_index":919,"title":{},"body":{"classes/UserSubscribeDto.html":{}}}],["isglobal",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":65,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["isnotempty",{"_index":33,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/UpdateCvDto.html":{},"classes/UserSubscribeDto.html":{}}}],["isnotempty()@isstring",{"_index":26,"title":{},"body":{"classes/AddCvDto.html":{}}}],["isnotempty()@type(undefined)@isnumber",{"_index":23,"title":{},"body":{"classes/AddCvDto.html":{}}}],["isnotempty()@type(undefined)@isnumber()@min(15)@max(65",{"_index":20,"title":{},"body":{"classes/AddCvDto.html":{}}}],["isnumber",{"_index":34,"title":{},"body":{"classes/AddCvDto.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/UpdateCvDto.html":{}}}],["isnumber()@isoptional()@type(undefined",{"_index":532,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{}}}],["isnumeric",{"_index":702,"title":{},"body":{"controllers/TodoController.html":{}}}],["isoptional",{"_index":35,"title":{},"body":{"classes/AddCvDto.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/UpdateCvDto.html":{}}}],["isoptional()@isstring",{"_index":30,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["isoptional()@type(undefined)@isnumber",{"_index":783,"title":{},"body":{"classes/UpdateCvDto.html":{}}}],["isoptional()@type(undefined)@isnumber()@min(15)@max(65",{"_index":782,"title":{},"body":{"classes/UpdateCvDto.html":{}}}],["isowneroradmin",{"_index":866,"title":{},"body":{"injectables/UserService.html":{}}}],["isowneroradmin(objet",{"_index":873,"title":{},"body":{"injectables/UserService.html":{}}}],["isstring",{"_index":36,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"classes/UpdateCvDto.html":{}}}],["isstring()@isnotempty()@minlength(10",{"_index":51,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["isstring()@isnotempty()@minlength(6",{"_index":53,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["isstring()@isoptional",{"_index":784,"title":{},"body":{"classes/UpdateCvDto.html":{}}}],["item",{"_index":530,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{}}}],["j",{"_index":637,"title":{},"body":{"injectables/MailService.html":{}}}],["j'ai",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["j'envoi",{"_index":350,"title":{},"body":{"injectables/CvListener.html":{}}}],["je",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["job",{"_index":13,"title":{},"body":{"classes/AddCvDto.html":{},"classes/CvEntity.html":{},"classes/UpdateCvDto.html":{}}}],["join",{"_index":599,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":612,"title":{},"body":{"modules/MailModule.html":{}}}],["jointe",{"_index":641,"title":{},"body":{"injectables/MailService.html":{}}}],["jwt",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":854,"title":{},"body":{"modules/UserModule.html":{}}}],["jwt.strategy.ts",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwt.strategy.ts:12",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt.strategy.ts:25",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtauthguard",{"_index":250,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CvController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":850,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":859,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":868,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":540,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1048,"title":{},"body":{"index.html":{}}}],["l",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["l'ajout",{"_index":346,"title":{},"body":{"injectables/CvListener.html":{}}}],["l'objet",{"_index":721,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["la",{"_index":55,"title":{},"body":{"classes/AddTodoDto.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["le",{"_index":272,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["length",{"_index":302,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["les",{"_index":450,"title":{},"body":{"injectables/CvService.html":{}}}],["license",{"_index":1054,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1031,"title":{},"body":{"index.html":{}}}],["liste",{"_index":712,"title":{},"body":{"controllers/TodoController.html":{}}}],["listeners/cv.listener",{"_index":363,"title":{},"body":{"modules/CvModule.html":{}}}],["literal",{"_index":789,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["load",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost',//process.env.db_host",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":800,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login(credentials",{"_index":804,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logincredentialsdto",{"_index":584,"title":{"classes/LoginCredentialsDto.html":{}},"body":{"classes/LoginCredentialsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["mail.service",{"_index":593,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{}}}],["mail/mail.service",{"_index":342,"title":{},"body":{"injectables/CvListener.html":{}}}],["mailermodule",{"_index":594,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forroot",{"_index":600,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":623,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":103,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":333,"title":{"injectables/MailService.html":{}},"body":{"injectables/CvListener.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":409,"title":{},"body":{"injectables/CvService.html":{},"dependencies.html":{}}}],["manytoone",{"_index":320,"title":{},"body":{"classes/CvEntity.html":{}}}],["manytoone(undefined",{"_index":306,"title":{},"body":{"classes/CvEntity.html":{}}}],["matching",{"_index":45,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":37,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["max(65",{"_index":43,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["maxage",{"_index":394,"title":{},"body":{"injectables/CvService.html":{}}}],["maxlength",{"_index":66,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["maxlength(25",{"_index":70,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["mdp",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["mesqueryparams",{"_index":677,"title":{},"body":{"controllers/TodoController.html":{}}}],["message",{"_index":54,"title":{},"body":{"classes/AddTodoDto.html":{},"injectables/TodoService.html":{}}}],["metadata",{"_index":790,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{},"dependencies.html":{}}}],["method",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":526,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["middlewareconsumer",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/cors",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["middlewares/first.middleware",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/helmet",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["middlewares/logger.middleware",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/morgan",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["min",{"_index":38,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["min(15",{"_index":42,"title":{},"body":{"classes/AddCvDto.html":{},"classes/UpdateCvDto.html":{}}}],["minage",{"_index":390,"title":{},"body":{"injectables/CvService.html":{}}}],["minimale",{"_index":57,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["minlength",{"_index":67,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["minlength(10",{"_index":71,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["minlength(6",{"_index":68,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["mis",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["miscellaneous",{"_index":988,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1030,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1020,"title":{},"body":{"index.html":{}}}],["modifiertodo",{"_index":665,"title":{},"body":{"controllers/TodoController.html":{}}}],["modifiertodo(id",{"_index":681,"title":{},"body":{"controllers/TodoController.html":{}}}],["module",{"_index":94,"title":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":96,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":596,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":598,"title":{},"body":{"modules/MailModule.html":{}}}],["mon",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["more",{"_index":1043,"title":{},"body":{"index.html":{}}}],["mot",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["ms",{"_index":510,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["mysql",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1049,"title":{},"body":{"index.html":{}}}],["méthode",{"_index":762,"title":{},"body":{"injectables/TodoService.html":{}}}],["n'existe",{"_index":426,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{}}}],["name",{"_index":14,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"modules/AppModule.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":1053,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":497,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["nestjs",{"_index":595,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":851,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":538,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":521,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["nestmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":423,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newcv",{"_index":440,"title":{},"body":{"injectables/CvService.html":{}}}],["newcv.name",{"_index":446,"title":{},"body":{"injectables/CvService.html":{}}}],["newcv.user",{"_index":442,"title":{},"body":{"injectables/CvService.html":{}}}],["newtodo",{"_index":669,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["newtodo.description",{"_index":778,"title":{},"body":{"injectables/TodoService.html":{}}}],["newtodo.name",{"_index":780,"title":{},"body":{"injectables/TodoService.html":{}}}],["next",{"_index":492,"title":{},"body":{"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":505,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["node.js",{"_index":999,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["nombre",{"_index":273,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["nombredecv",{"_index":484,"title":{},"body":{"injectables/CvService.html":{}}}],["non",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["notfoundexception",{"_index":402,"title":{},"body":{"injectables/CvService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('username",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`le",{"_index":424,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{}}}],["nouveau",{"_index":465,"title":{},"body":{"injectables/CvService.html":{}}}],["nouvelle",{"_index":462,"title":{},"body":{"injectables/CvService.html":{}}}],["npm",{"_index":1013,"title":{},"body":{"index.html":{}}}],["null",{"_index":871,"title":{},"body":{"injectables/UserService.html":{}}}],["nullable",{"_index":309,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":18,"title":{},"body":{"classes/AddCvDto.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvService.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"classes/UserEntity.html":{}}}],["object",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objet",{"_index":875,"title":{},"body":{"injectables/UserService.html":{}}}],["objet.user",{"_index":913,"title":{},"body":{"injectables/UserService.html":{}}}],["objet.user.id",{"_index":914,"title":{},"body":{"injectables/UserService.html":{}}}],["observable",{"_index":496,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["onetomany",{"_index":838,"title":{},"body":{"classes/UserEntity.html":{}}}],["onetomany(undefined",{"_index":825,"title":{},"body":{"classes/UserEntity.html":{}}}],["onevent",{"_index":339,"title":{},"body":{"injectables/CvListener.html":{}}}],["onevent(events.cv_add",{"_index":336,"title":{},"body":{"injectables/CvListener.html":{}}}],["open",{"_index":1032,"title":{},"body":{"index.html":{}}}],["optional",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":617,"title":{},"body":{"modules/MailModule.html":{},"injectables/UserService.html":{}}}],["os",{"_index":705,"title":{},"body":{"controllers/TodoController.html":{}}}],["ou",{"_index":430,"title":{},"body":{"injectables/CvService.html":{},"injectables/UserService.html":{}}}],["oui",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1058,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":948,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":531,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{}}}],["paginated",{"_index":529,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{},"controllers/TodoController.html":{},"coverage.html":{}}}],["par",{"_index":274,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["param",{"_index":237,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{}}}],["param('data",{"_index":734,"title":{},"body":{"controllers/TodoController.html":{}}}],["param('id",{"_index":278,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{}}}],["paramdata",{"_index":689,"title":{},"body":{"controllers/TodoController.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["paramètre",{"_index":457,"title":{},"body":{"injectables/CvService.html":{}}}],["parseint(process.env.db_port",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":238,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{}}}],["partial",{"_index":682,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["partir",{"_index":720,"title":{},"body":{"controllers/TodoController.html":{}}}],["pas",{"_index":427,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":455,"title":{},"body":{"injectables/CvService.html":{},"modules/MailModule.html":{}}}],["passe",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["passport",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":849,"title":{},"body":{"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":857,"title":{},"body":{"modules/UserModule.html":{}}}],["passportstrategy",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginCredentialsDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["patch",{"_index":239,"title":{},"body":{"controllers/CvController.html":{}}}],["patch(':id",{"_index":284,"title":{},"body":{"controllers/CvController.html":{}}}],["patch(':id')@useguards(jwtauthguard",{"_index":227,"title":{},"body":{"controllers/CvController.html":{}}}],["patch()@useguards(jwtauthguard",{"_index":230,"title":{},"body":{"controllers/CvController.html":{}}}],["path",{"_index":15,"title":{},"body":{"classes/AddCvDto.html":{},"modules/AppModule.html":{},"classes/CvEntity.html":{},"modules/MailModule.html":{},"classes/UpdateCvDto.html":{}}}],["payload",{"_index":338,"title":{},"body":{"injectables/CvListener.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/UserService.html":{}}}],["payload.username",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloadinterface",{"_index":548,"title":{"interfaces/PayloadInterface.html":{}},"body":{"injectables/JwtStrategy.html":{},"interfaces/PayloadInterface.html":{},"coverage.html":{}}}],["pdf",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["peut",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["pipes/upper",{"_index":707,"title":{},"body":{"controllers/TodoController.html":{}}}],["pipetransform",{"_index":794,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["pièce",{"_index":640,"title":{},"body":{"injectables/MailService.html":{}}}],["please",{"_index":1041,"title":{},"body":{"index.html":{}}}],["port",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":240,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":805,"title":{},"body":{"controllers/UserController.html":{}}}],["post('pipe",{"_index":687,"title":{},"body":{"controllers/TodoController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":204,"title":{},"body":{"controllers/CvController.html":{}}}],["pour",{"_index":764,"title":{},"body":{"injectables/TodoService.html":{}}}],["prefix",{"_index":190,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":298,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["private",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.env.db_password",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.secret",{"_index":861,"title":{},"body":{"modules/UserModule.html":{}}}],["production",{"_index":1022,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":998,"title":{},"body":{"index.html":{}}}],["project",{"_index":1033,"title":{},"body":{"index.html":{}}}],["promise",{"_index":206,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"classes/CvEntity.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"classes/UserEntity.html":{},"classes/UserSubscribeDto.html":{}}}],["provide",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{}}}],["pugadapter",{"_index":615,"title":{},"body":{"modules/MailModule.html":{}}}],["put",{"_index":693,"title":{},"body":{"controllers/TodoController.html":{}}}],["put(':id",{"_index":683,"title":{},"body":{"controllers/TodoController.html":{}}}],["qb",{"_index":480,"title":{},"body":{"injectables/CvService.html":{}}}],["qb.select(\"cv.age",{"_index":482,"title":{},"body":{"injectables/CvService.html":{}}}],["qu'il",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["que",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["query",{"_index":694,"title":{},"body":{"controllers/TodoController.html":{}}}],["querybuilder",{"_index":479,"title":{},"body":{"injectables/CvService.html":{}}}],["read",{"_index":1042,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":801,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(userdata",{"_index":808,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removecv(id",{"_index":468,"title":{},"body":{"injectables/CvService.html":{}}}],["remplace",{"_index":449,"title":{},"body":{"injectables/CvService.html":{}}}],["reply",{"_index":609,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":371,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":519,"title":{},"body":{"injectables/FirstMiddleware.html":{},"controllers/TodoController.html":{},"miscellaneous/variables.html":{}}}],["req.ip",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":514,"title":{},"body":{"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.delete",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":515,"title":{},"body":{"injectables/FirstMiddleware.html":{},"controllers/TodoController.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":516,"title":{},"body":{"injectables/FirstMiddleware.html":{},"controllers/TodoController.html":{},"miscellaneous/variables.html":{}}}],["response.json",{"_index":716,"title":{},"body":{"controllers/TodoController.html":{}}}],["response.status(205",{"_index":715,"title":{},"body":{"controllers/TodoController.html":{}}}],["restorecv",{"_index":197,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["restorecv(id",{"_index":218,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["result",{"_index":44,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":46,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["return",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":647,"title":{},"body":{"interfaces/PayloadInterface.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["role.enum",{"_index":407,"title":{},"body":{"injectables/CvService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["role.enum.ts",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1017,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":498,"title":{},"body":{"injectables/DurationInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal",{"_index":703,"title":{},"body":{"controllers/TodoController.html":{}}}],["rxjs/operators",{"_index":500,"title":{},"body":{"injectables/DurationInterceptor.html":{},"controllers/TodoController.html":{}}}],["récupér",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["récupére",{"_index":447,"title":{},"body":{"injectables/CvService.html":{},"injectables/UserService.html":{}}}],["récupérer",{"_index":722,"title":{},"body":{"controllers/TodoController.html":{}}}],["réponse",{"_index":718,"title":{},"body":{"controllers/TodoController.html":{}}}],["s'il",{"_index":765,"title":{},"body":{"injectables/TodoService.html":{}}}],["salt",{"_index":824,"title":{},"body":{"classes/UserEntity.html":{}}}],["sauvgarder",{"_index":461,"title":{},"body":{"injectables/CvService.html":{}}}],["scalable",{"_index":1003,"title":{},"body":{"index.html":{}}}],["se",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":860,"title":{},"body":{"modules/UserModule.html":{}}}],["secretorkey",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sent",{"_index":631,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":1004,"title":{},"body":{"index.html":{}}}],["service",{"_index":603,"title":{},"body":{"modules/MailModule.html":{}}}],["si",{"_index":428,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["side",{"_index":1005,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":862,"title":{},"body":{"modules/UserModule.html":{}}}],["sinon",{"_index":768,"title":{},"body":{"injectables/TodoService.html":{}}}],["smtps://user@example.com:topsecret@smtp.example.com",{"_index":602,"title":{},"body":{"modules/MailModule.html":{}}}],["softdeletecv",{"_index":368,"title":{},"body":{"injectables/CvService.html":{}}}],["softdeletecv(id",{"_index":387,"title":{},"body":{"injectables/CvService.html":{}}}],["son",{"_index":725,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"modules/CvModule.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"index.html":{}}}],["splice",{"_index":763,"title":{},"body":{"injectables/TodoService.html":{}}}],["sponsors",{"_index":1036,"title":{},"body":{"index.html":{}}}],["src/.../cv.seeder.ts",{"_index":995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../events.ts",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:57",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":185,"title":{},"body":{"injectables/AppService.html":{}}}],["src/commands/cv.seeder.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/config/events.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cv/cv.controller.ts",{"_index":189,"title":{},"body":{"controllers/CvController.html":{},"coverage.html":{}}}],["src/cv/cv.controller.ts:27",{"_index":224,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:36",{"_index":214,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:44",{"_index":205,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:54",{"_index":231,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:65",{"_index":222,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:71",{"_index":220,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:80",{"_index":217,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:89",{"_index":209,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.controller.ts:98",{"_index":228,"title":{},"body":{"controllers/CvController.html":{}}}],["src/cv/cv.module.ts",{"_index":361,"title":{},"body":{"modules/CvModule.html":{}}}],["src/cv/cv.service.ts",{"_index":365,"title":{},"body":{"injectables/CvService.html":{},"coverage.html":{}}}],["src/cv/cv.service.ts:103",{"_index":386,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:115",{"_index":381,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:119",{"_index":391,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:14",{"_index":377,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:24",{"_index":383,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:47",{"_index":385,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:53",{"_index":380,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:64",{"_index":397,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:82",{"_index":399,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/cv.service.ts:91",{"_index":388,"title":{},"body":{"injectables/CvService.html":{}}}],["src/cv/dto/add",{"_index":6,"title":{},"body":{"classes/AddCvDto.html":{},"coverage.html":{}}}],["src/cv/dto/update",{"_index":781,"title":{},"body":{"classes/UpdateCvDto.html":{},"coverage.html":{}}}],["src/cv/entities/cv.entity.ts",{"_index":286,"title":{},"body":{"classes/CvEntity.html":{},"coverage.html":{}}}],["src/cv/entities/cv.entity.ts:10",{"_index":299,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:16",{"_index":303,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:21",{"_index":297,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:24",{"_index":293,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:27",{"_index":294,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:30",{"_index":300,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:33",{"_index":304,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/entities/cv.entity.ts:44",{"_index":311,"title":{},"body":{"classes/CvEntity.html":{}}}],["src/cv/listeners/cv.listener.ts",{"_index":330,"title":{},"body":{"injectables/CvListener.html":{},"coverage.html":{}}}],["src/cv/listeners/cv.listener.ts:13",{"_index":337,"title":{},"body":{"injectables/CvListener.html":{}}}],["src/cv/listeners/cv.listener.ts:7",{"_index":334,"title":{},"body":{"injectables/CvListener.html":{}}}],["src/decorators/user.decorator.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/enums/user",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/generics/timestamp.entites..ts",{"_index":648,"title":{},"body":{"classes/TimestampEntites.html":{},"coverage.html":{}}}],["src/generics/timestamp.entites..ts:12",{"_index":651,"title":{},"body":{"classes/TimestampEntites.html":{}}}],["src/generics/timestamp.entites..ts:15",{"_index":650,"title":{},"body":{"classes/TimestampEntites.html":{}}}],["src/generics/timestamp.entites..ts:9",{"_index":649,"title":{},"body":{"classes/TimestampEntites.html":{}}}],["src/interceptors/duration.interceptor.ts",{"_index":488,"title":{},"body":{"injectables/DurationInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/duration.interceptor.ts:7",{"_index":494,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["src/mail/mail.module.ts",{"_index":592,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":620,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:10",{"_index":626,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:5",{"_index":624,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/first.middleware.ts",{"_index":511,"title":{},"body":{"injectables/FirstMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/first.middleware.ts:6",{"_index":518,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pipes/upper",{"_index":785,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{},"coverage.html":{}}}],["src/todo/dto/add",{"_index":48,"title":{},"body":{"classes/AddTodoDto.html":{},"coverage.html":{}}}],["src/todo/dto/get",{"_index":528,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts",{"_index":653,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts:3",{"_index":656,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:4",{"_index":657,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:5",{"_index":655,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:6",{"_index":654,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/todo.controller.ts",{"_index":659,"title":{},"body":{"controllers/TodoController.html":{},"coverage.html":{}}}],["src/todo/todo.controller.ts:34",{"_index":680,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:47",{"_index":676,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:55",{"_index":674,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:67",{"_index":668,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:75",{"_index":671,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:82",{"_index":684,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:90",{"_index":688,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.module.ts",{"_index":737,"title":{},"body":{"modules/TodoModule.html":{}}}],["src/todo/todo.service.ts",{"_index":740,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/todo/todo.service.ts:12",{"_index":742,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:31",{"_index":745,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:38",{"_index":743,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:54",{"_index":748,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:7",{"_index":749,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:9",{"_index":746,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/user/dto/login",{"_index":585,"title":{},"body":{"classes/LoginCredentialsDto.html":{},"coverage.html":{}}}],["src/user/dto/user",{"_index":917,"title":{},"body":{"classes/UserSubscribeDto.html":{},"coverage.html":{}}}],["src/user/entites/user.entity.ts",{"_index":822,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/entites/user.entity.ts:11",{"_index":829,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entites/user.entity.ts:17",{"_index":837,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entites/user.entity.ts:22",{"_index":828,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entites/user.entity.ts:26",{"_index":831,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entites/user.entity.ts:30",{"_index":835,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entites/user.entity.ts:37",{"_index":834,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entites/user.entity.ts:47",{"_index":826,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/guards/jwt",{"_index":535,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/user/interfaces/payload.interface.ts",{"_index":646,"title":{},"body":{"interfaces/PayloadInterface.html":{},"coverage.html":{}}}],["src/user/strategy/passport",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":798,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":810,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:21",{"_index":806,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":803,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":847,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":865,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":869,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":878,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:38",{"_index":877,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:72",{"_index":874,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:76",{"_index":872,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":1018,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1021,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1023,"title":{},"body":{"index.html":{}}}],["started",{"_index":997,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1011,"title":{},"body":{"index.html":{}}}],["statcvnumberbyage",{"_index":369,"title":{},"body":{"injectables/CvService.html":{}}}],["statcvnumberbyage(maxage",{"_index":389,"title":{},"body":{"injectables/CvService.html":{}}}],["statements",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["statscvnumberbyage",{"_index":198,"title":{},"body":{"controllers/CvController.html":{}}}],["stay",{"_index":1045,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy/passport",{"_index":853,"title":{},"body":{"modules/UserModule.html":{}}}],["strict",{"_index":618,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":25,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CvEntity.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"classes/UserEntity.html":{},"classes/UserSubscribeDto.html":{}}}],["subject",{"_index":629,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribe.dto",{"_index":814,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["subscribe.dto.ts",{"_index":918,"title":{},"body":{"classes/UserSubscribeDto.html":{},"coverage.html":{}}}],["subscribe.dto.ts:10",{"_index":920,"title":{},"body":{"classes/UserSubscribeDto.html":{}}}],["subscribe.dto.ts:13",{"_index":921,"title":{},"body":{"classes/UserSubscribeDto.html":{}}}],["subscribe.dto.ts:6",{"_index":922,"title":{},"body":{"classes/UserSubscribeDto.html":{}}}],["suis",{"_index":524,"title":{},"body":{"injectables/FirstMiddleware.html":{},"controllers/TodoController.html":{}}}],["super",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1037,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supprim",{"_index":772,"title":{},"body":{"injectables/TodoService.html":{}}}],["supprimer",{"_index":731,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["sur",{"_index":345,"title":{},"body":{"injectables/CvListener.html":{}}}],["suucès",{"_index":774,"title":{},"body":{"injectables/TodoService.html":{}}}],["svg",{"_index":1056,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":771,"title":{},"body":{"injectables/TodoService.html":{}}}],["t00nday/nestjs",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":758,"title":{},"body":{"injectables/TodoService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["taille",{"_index":56,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["tap",{"_index":499,"title":{},"body":{"injectables/DurationInterceptor.html":{}}}],["techwall",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["template",{"_index":610,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":613,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":1026,"title":{},"body":{"index.html":{}}}],["test1.txt",{"_index":634,"title":{},"body":{"injectables/MailService.html":{}}}],["test:covsupport",{"_index":1029,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1028,"title":{},"body":{"index.html":{}}}],["tester",{"_index":459,"title":{},"body":{"injectables/CvService.html":{}}}],["testfaker",{"_index":199,"title":{},"body":{"controllers/CvController.html":{}}}],["testpipe",{"_index":666,"title":{},"body":{"controllers/TodoController.html":{}}}],["testpipe(paramdata",{"_index":685,"title":{},"body":{"controllers/TodoController.html":{}}}],["tests",{"_index":1025,"title":{},"body":{"index.html":{}}}],["text/plain",{"_index":643,"title":{},"body":{"injectables/MailService.html":{}}}],["thanks",{"_index":1035,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cachemanager.get(cacheid",{"_index":417,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cachemanager.set(`get.cv.${id",{"_index":433,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.create(cv",{"_index":441,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.createquerybuilder(\"cv",{"_index":481,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.delete(id",{"_index":477,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.find",{"_index":438,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.find({user",{"_index":439,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.findone(id",{"_index":421,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.findone({id",{"_index":472,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.preload",{"_index":458,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.query(\"select",{"_index":475,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.remove(cvtoremove",{"_index":471,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.restore(id",{"_index":476,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.save(newcv",{"_index":443,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.softdelete(id",{"_index":474,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvrepository.update(updatecriteria",{"_index":467,"title":{},"body":{"injectables/CvService.html":{}}}],["this.cvservice.addcv(addcvdto",{"_index":267,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.findcvbyid(id",{"_index":281,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.getcvs(user",{"_index":266,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.restorecv(id",{"_index":279,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.softdeletecv(id",{"_index":283,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.statcvnumberbyage(50,18",{"_index":276,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.updatecv(id",{"_index":285,"title":{},"body":{"controllers/CvController.html":{}}}],["this.cvservice.updatecv2(updatecriteria",{"_index":270,"title":{},"body":{"controllers/CvController.html":{}}}],["this.eventemitter.emit(events.cv_add",{"_index":445,"title":{},"body":{"injectables/CvService.html":{}}}],["this.findcvbyid(id",{"_index":470,"title":{},"body":{"injectables/CvService.html":{}}}],["this.gettodobyid(id",{"_index":776,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.jwtservice.sign(payload",{"_index":910,"title":{},"body":{"injectables/UserService.html":{}}}],["this.mailerservice.sendmail",{"_index":627,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.addedcvmail",{"_index":444,"title":{},"body":{"injectables/CvService.html":{}}}],["this.mailservice.addedcvmail(payload",{"_index":354,"title":{},"body":{"injectables/CvListener.html":{}}}],["this.todos",{"_index":750,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todos.find((actualtodo",{"_index":756,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todos.findindex((todo",{"_index":759,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todos.length",{"_index":751,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todos.push(todo",{"_index":755,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todos.splice(index",{"_index":767,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todos[this.todos.length",{"_index":752,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todoservice.addtodo(newtodo",{"_index":730,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.deletetodo(id",{"_index":732,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.gettodobyid(id",{"_index":728,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.gettodos",{"_index":723,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.updatetodo(id",{"_index":733,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.userrepository.create",{"_index":881,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user",{"_index":899,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":916,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find(options",{"_index":915,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone({username",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepository.save(user",{"_index":884,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findall",{"_index":821,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.isowneroradmin(cv",{"_index":431,"title":{},"body":{"injectables/CvService.html":{}}}],["this.userservice.isowneroradmin(newcv",{"_index":466,"title":{},"body":{"injectables/CvService.html":{}}}],["this.userservice.login(credentials",{"_index":820,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(userdata",{"_index":819,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":422,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["timestampentites",{"_index":288,"title":{"classes/TimestampEntites.html":{}},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["timestampentites:12",{"_index":319,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["timestampentites:15",{"_index":317,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["timestampentites:9",{"_index":315,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["todo",{"_index":176,"title":{"classes/Todo.html":{}},"body":{"modules/AppModule.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todo.controller",{"_index":739,"title":{},"body":{"modules/TodoModule.html":{}}}],["todo.description",{"_index":777,"title":{},"body":{"injectables/TodoService.html":{}}}],["todo.dto",{"_index":699,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["todo.dto.ts",{"_index":49,"title":{},"body":{"classes/AddTodoDto.html":{},"classes/GetPaginatedTodoDto.html":{},"coverage.html":{}}}],["todo.dto.ts:10",{"_index":64,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["todo.dto.ts:14",{"_index":533,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{}}}],["todo.dto.ts:15",{"_index":52,"title":{},"body":{"classes/AddTodoDto.html":{}}}],["todo.dto.ts:9",{"_index":534,"title":{},"body":{"classes/GetPaginatedTodoDto.html":{}}}],["todo.id",{"_index":760,"title":{},"body":{"injectables/TodoService.html":{}}}],["todo.name",{"_index":779,"title":{},"body":{"injectables/TodoService.html":{}}}],["todo.service",{"_index":701,"title":{},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{}}}],["todo/todo.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["todocontroller",{"_index":658,"title":{"controllers/TodoController.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["todomodule",{"_index":104,"title":{"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["todos",{"_index":714,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["todoservice",{"_index":700,"title":{"injectables/TodoService.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":1046,"title":{},"body":{"index.html":{}}}],["transform",{"_index":787,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["transform(entry",{"_index":788,"title":{},"body":{"injectables/UpperAndFusionPipe.html":{}}}],["transformer",{"_index":40,"title":{},"body":{"classes/AddCvDto.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/UpdateCvDto.html":{},"classes/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":601,"title":{},"body":{"modules/MailModule.html":{}}}],["tre",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["true",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/CvEntity.html":{},"modules/MailModule.html":{},"classes/UserEntity.html":{}}}],["try",{"_index":353,"title":{},"body":{"injectables/CvListener.html":{},"injectables/UserService.html":{}}}],["ttl",{"_index":434,"title":{},"body":{"injectables/CvService.html":{}}}],["twitter",{"_index":1052,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"modules/AppModule.html":{},"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/DurationInterceptor.html":{},"injectables/FirstMiddleware.html":{},"classes/GetPaginatedTodoDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"injectables/MailService.html":{},"interfaces/PayloadInterface.html":{},"classes/TimestampEntites.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateCvDto.html":{},"injectables/UpperAndFusionPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":322,"title":{},"body":{"classes/CvEntity.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([cventity",{"_index":364,"title":{},"body":{"modules/CvModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":856,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["types/passport",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1010,"title":{},"body":{"index.html":{}}}],["ui",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":348,"title":{},"body":{"injectables/CvListener.html":{},"injectables/CvService.html":{},"injectables/MailService.html":{},"controllers/TodoController.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception",{"_index":403,"title":{},"body":{"injectables/CvService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":307,"title":{},"body":{"classes/CvEntity.html":{},"classes/UserEntity.html":{}}}],["une",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":836,"title":{},"body":{"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":1024,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":211,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":328,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{}}}],["updatecriteria",{"_index":269,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["updatecv",{"_index":200,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["updatecv(id",{"_index":396,"title":{},"body":{"injectables/CvService.html":{}}}],["updatecv(updatecvdto",{"_index":225,"title":{},"body":{"controllers/CvController.html":{}}}],["updatecv2",{"_index":201,"title":{},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{}}}],["updatecv2(updatecriteria",{"_index":398,"title":{},"body":{"injectables/CvService.html":{}}}],["updatecv2(updateobject",{"_index":229,"title":{},"body":{"controllers/CvController.html":{}}}],["updatecvdto",{"_index":226,"title":{"classes/UpdateCvDto.html":{}},"body":{"controllers/CvController.html":{},"injectables/CvService.html":{},"classes/UpdateCvDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":291,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{}}}],["updatedatecolumn",{"_index":318,"title":{},"body":{"classes/CvEntity.html":{},"classes/TimestampEntites.html":{},"classes/UserEntity.html":{}}}],["updateobject",{"_index":232,"title":{},"body":{"controllers/CvController.html":{}}}],["updatetodo",{"_index":741,"title":{},"body":{"injectables/TodoService.html":{}}}],["updatetodo(id",{"_index":747,"title":{},"body":{"injectables/TodoService.html":{}}}],["updatetodo(id:number",{"_index":775,"title":{},"body":{"injectables/TodoService.html":{}}}],["upperandfusionpipe",{"_index":706,"title":{"injectables/UpperAndFusionPipe.html":{}},"body":{"controllers/TodoController.html":{},"injectables/UpperAndFusionPipe.html":{},"coverage.html":{}}}],["use",{"_index":512,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["use(req",{"_index":513,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["useclass",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":241,"title":{},"body":{"controllers/CvController.html":{}}}],["useguards(jwtauthguard",{"_index":260,"title":{},"body":{"controllers/CvController.html":{}}}],["useinterceptors",{"_index":242,"title":{},"body":{"controllers/CvController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":256,"title":{},"body":{"controllers/CvController.html":{}}}],["user",{"_index":203,"title":{},"body":{"controllers/CvController.html":{},"classes/CvEntity.html":{},"injectables/CvService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":848,"title":{},"body":{"modules/UserModule.html":{}}}],["user.cvs",{"_index":326,"title":{},"body":{"classes/CvEntity.html":{}}}],["user.email",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":436,"title":{},"body":{"injectables/CvService.html":{},"injectables/UserService.html":{}}}],["user.salt",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":815,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["user/entites/user.entity",{"_index":324,"title":{},"body":{"classes/CvEntity.html":{}}}],["user/guards/jwt",{"_index":251,"title":{},"body":{"controllers/CvController.html":{}}}],["user/user.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{}}}],["user/user.service",{"_index":408,"title":{},"body":{"injectables/CvService.html":{}}}],["usercontroller",{"_index":797,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":811,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userentity",{"_index":305,"title":{"classes/UserEntity.html":{}},"body":{"classes/CvEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":105,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{}}}],["userrepository",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["userroleenum",{"_index":405,"title":{},"body":{"injectables/CvService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["userroleenum.admin",{"_index":437,"title":{},"body":{"injectables/CvService.html":{},"injectables/UserService.html":{}}}],["userroleenum.user",{"_index":842,"title":{},"body":{"classes/UserEntity.html":{}}}],["userservice",{"_index":372,"title":{"injectables/UserService.html":{}},"body":{"injectables/CvService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersubscribedto",{"_index":809,"title":{"classes/UserSubscribeDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserSubscribeDto.html":{},"coverage.html":{}}}],["utiliser",{"_index":761,"title":{},"body":{"injectables/TodoService.html":{}}}],["vais",{"_index":769,"title":{},"body":{"injectables/TodoService.html":{}}}],["valeurs",{"_index":452,"title":{},"body":{"injectables/CvService.html":{}}}],["validate",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":695,"title":{},"body":{"controllers/TodoController.html":{}}}],["validator",{"_index":39,"title":{},"body":{"classes/AddCvDto.html":{},"classes/AddTodoDto.html":{},"classes/GetPaginatedTodoDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/UpdateCvDto.html":{},"classes/UserSubscribeDto.html":{},"dependencies.html":{}}}],["value",{"_index":393,"title":{},"body":{"injectables/CvService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1063,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":724,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["void",{"_index":517,"title":{},"body":{"injectables/FirstMiddleware.html":{},"controllers/TodoController.html":{}}}],["vérifie",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["vérifier",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["watch",{"_index":1019,"title":{},"body":{"index.html":{}}}],["website",{"_index":1050,"title":{},"body":{"index.html":{}}}],["where(\"cv.age",{"_index":485,"title":{},"body":{"injectables/CvService.html":{}}}],["where(\"user.username",{"_index":900,"title":{},"body":{"injectables/UserService.html":{}}}],["wuth",{"_index":415,"title":{},"body":{"injectables/CvService.html":{}}}],["y",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["you'd",{"_index":1040,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/CvModule.html":{},"modules/MailModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddCvDto.html":{"url":"classes/AddCvDto.html","title":"class - AddCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cv/dto/Add-cv.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                cin\n                            \n                            \n                                firstname\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Type(undefined)@IsNumber()@Min(15)@Max(65)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/Add-cv.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/Add-cv.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/Add-cv.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/Add-cv.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/Add-cv.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/Add-cv.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class AddCvDto {\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  firstname: string;\n\n  @IsNotEmpty()\n  @Type(() => Number )\n  @IsNumber()\n  @Min(15)\n  @Max(65)\n  age: number;\n\n  @IsNotEmpty()\n  @Type(() => Number )\n  @IsNumber()\n  cin: number;\n\n  @IsNotEmpty()\n  @IsString()\n  job: string;\n\n  @IsOptional()\n  @IsString()\n  path: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTodoDto.html":{"url":"classes/AddTodoDto.html","title":"class - AddTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/add-todo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/add-todo.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6, {message: 'La taille minimale du champ name est de 6 caractère'})@MaxLength(25)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/add-todo.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIn, IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class AddTodoDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6, {\n    message: 'La taille minimale du champ name est de 6 caractère'\n  })\n  @MaxLength(25)\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(10)\n  description: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly configService: ConfigService\n    ) {}\n\n  @Get('hello')\n  getHello(): string {\n    console.log('PORT de l application',this.configService.get('APP_PORT'));\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCvModule\n\nCvModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCvModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CvModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            TodoModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TodoModule } from './todo/todo.module';\nimport { FirstMiddleware } from './middlewares/first.middleware';\nimport { logger } from './middlewares/Logger.middleware';\nimport { HelmetMiddleware } from '@nest-middlewares/helmet';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CvModule } from './cv/cv.module';\nimport { UserModule } from './user/user.module';\n\nimport appConfig from './config/app.config';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { MailModule } from './mail/mail.module';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\n\n@Module({\n  imports: [\n    TodoModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [appConfig]\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',//process.env.DB_HOST,\n      port: 3306, //parseInt(process.env.DB_PORT),\n      username: 'root', //process.env.DB_USERNAME,\n      password: '',// process.env.DB_PASSWORD,\n      database: 'nest-cvtech',//process.env.DB_NAME,\n      autoLoadEntities: true,\n      entities: [\"dist/**/*.entity{.ts,.js}\"],\n      synchronize: true,\n      debug: false\n    }),\n    CvModule,\n    UserModule,\n    EventEmitterModule.forRoot(),\n    MailModule,\n    CacheModule.register({\n\n    })\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor\n    }\n  ],\n  exports: [AppService]\n})\nexport class AppModule implements NestModule{\n  configure(consumer: MiddlewareConsumer): any {\n    consumer.apply(FirstMiddleware).forRoutes('hello',\n      {path: 'todo', method: RequestMethod.GET},\n      {path: 'todo*', method: RequestMethod.DELETE},\n    )\n      .apply(logger).forRoutes('')\n      .apply(HelmetMiddleware).forRoutes('')\n    ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello Nest Techwall!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CvController.html":{"url":"controllers/CvController.html","title":"controller - CvController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CvController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cv/cv.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cv\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCv\n                            \n                            \n                                    Async\n                                deleteCv\n                            \n                            \n                                    Async\n                                getAllCvs\n                            \n                            \n                                    Async\n                                getCv\n                            \n                            \n                                    Async\n                                restoreCv\n                            \n                            \n                                    Async\n                                statsCvNumberByAge\n                            \n                            \n                                testFaker\n                            \n                            \n                                    Async\n                                updateCv\n                            \n                            \n                                    Async\n                                updateCv2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCv(addCvDto: AddCvDto, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addCvDto\n                                    \n                                                AddCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCv(id: number, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllCvs\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCvs(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@UseInterceptors(CacheInterceptor)@CacheKey('cv.get.all')@CacheTTL(undefined)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCv(id, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreCv(id: number, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('recover/:id')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        statsCvNumberByAge\n                        \n                    \n                \n            \n            \n                \n                    \n                    statsCvNumberByAge()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('stats')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testFaker\n                        \n                    \n                \n            \n            \n                \ntestFaker()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('faker')\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCv(updateCvDto: UpdateCvDto, id: number, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCvDto\n                                    \n                                                UpdateCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCv2\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCv2(updateObject, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/cv/cv.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateObject\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body, CacheInterceptor, CacheKey, CacheTTL,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  UseGuards, UseInterceptors,\n} from '@nestjs/common';\nimport { CvService } from './cv.service';\nimport { CvEntity } from './entities/cv.entity';\nimport { AddCvDto } from './dto/Add-cv.dto';\nimport { UpdateCvDto } from './dto/update-cv.dto';\nimport { JwtAuthGuard } from '../user/Guards/jwt-auth.guard';\nimport { User } from '../decorators/user.decorator';\nimport * as faker from 'faker';\n@Controller('cv')\n// @UseInterceptors(CacheInterceptor)\nexport class CvController {\n  constructor(\n    private cvService: CvService\n  ) {}\n\n  @Get('faker')\n  testFaker() {\n    console.log('name example 👽' );\n    return faker.name.name;\n  }\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @UseInterceptors(CacheInterceptor)\n  @CacheKey('cv.get.all')\n  @CacheTTL(60 * 60 * 24)\n  async getAllCvs(\n    @User() user\n  ): Promise {\n    return await this.cvService.getCvs(user);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard)\n  async addCv(\n    @Body() addCvDto: AddCvDto,\n    @User() user\n  ): Promise {\n    return await this.cvService.addCv(addCvDto, user);\n  }\n\n\n  @Patch()\n  @UseGuards(JwtAuthGuard)\n  async updateCv2(\n    @Body() updateObject,\n    @User() user\n  ) {\n    const {updateCriteria, updateCvDto} = updateObject\n    return await this.cvService.updateCv2(updateCriteria, updateCvDto);\n  }\n\n  // Chercher le nombre de cv par age\n  @Get('stats')\n  @UseGuards(JwtAuthGuard)\n  async statsCvNumberByAge() {\n    return await this.cvService.statCvNumberByAge(50,18);\n  }\n\n  @Get('recover/:id')\n  @UseGuards(JwtAuthGuard)\n  async restoreCv(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user\n  ) {\n    return await this.cvService.restoreCv(id, user);\n  }\n\n  @Get(\":id\")\n  @UseGuards(JwtAuthGuard)\n  async getCv(\n    @Param('id', ParseIntPipe) id,\n    @User() user\n  ): Promise {\n    return await this.cvService.findCvById(id, user);\n  }\n\n  @Delete(':id')\n  @UseGuards(JwtAuthGuard)\n  async deleteCv(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user\n  ) {\n    return this.cvService.softDeleteCv(id, user);\n  }\n\n  @Patch(':id')\n  @UseGuards(JwtAuthGuard)\n  async updateCv(\n    @Body() updateCvDto: UpdateCvDto,\n    @Param('id', ParseIntPipe) id: number,\n    @User() user\n  ): Promise {\n    return await this.cvService.updateCv(id, updateCvDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CvEntity.html":{"url":"classes/CvEntity.html","title":"class - CvEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CvEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cv/entities/cv.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TimestampEntites\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                cin\n                            \n                            \n                                firstname\n                            \n                            \n                                id\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {cascade: undefined, nullable: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/entities/cv.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({update: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TimestampEntites\n\n                            \n                        \n                    \n                        \n                                Defined in         TimestampEntites:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TimestampEntites\n\n                            \n                        \n                    \n                        \n                                Defined in         TimestampEntites:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TimestampEntites\n\n                            \n                        \n                    \n                        \n                                Defined in         TimestampEntites:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ManyToOne, Entity, PrimaryGeneratedColumn, Column} from 'typeorm';\nimport { TimestampEntites } from '../../Generics/timestamp.entites.';\nimport { UserEntity } from '../../user/entites/user.entity';\n\n\n@Entity('cv')\nexport class CvEntity extends TimestampEntites {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    name: 'name',\n    length: 50\n  })\n  name: string;\n\n  @Column({\n    length: 50\n  })\n  firstname: string;\n\n  @Column()\n  age: number;\n\n  @Column()\n  cin: number;\n\n  @Column()\n  job: string;\n\n  @Column()\n  path: string;\n\n  @ManyToOne(\n    type => UserEntity,\n    (user) => user.cvs,\n    {\n      cascade: ['insert', 'update'],\n      nullable: true,\n      eager: true\n    }\n  )\n  user: UserEntity;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CvListener.html":{"url":"injectables/CvListener.html","title":"injectable - CvListener","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CvListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cv/Listeners/cv.listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleCvAdded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/cv/Listeners/cv.listener.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleCvAdded\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleCvAdded(payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent(EVENTS.CV_ADD)\n                \n            \n\n            \n                \n                    Defined in src/cv/Listeners/cv.listener.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OnEvent } from '@nestjs/event-emitter';\nimport { EVENTS } from '../../config/events';\nimport { Injectable } from '@nestjs/common';\nimport { MailService } from '../../mail/mail.service';\n\n@Injectable()\nexport class CvListener {\n  constructor(\n    private mailService: MailService\n  ) {\n  }\n  @OnEvent(EVENTS.CV_ADD)\n  async handleCvAdded(payload: any) {\n    console.log(\"j ecoute sur l'ajout d un cv et j'envoi un email\");\n    console.log('payloa');\n    try {\n      await this.mailService.addedCvMail(payload);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CvModule.html":{"url":"modules/CvModule.html","title":"module - CvModule","body":"\n                   \n\n\n\n\n    Modules\n    CvModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CvModule\n\n\n\ncluster_CvModule_imports\n\n\n\ncluster_CvModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nCvModule\n\nCvModule\n\nCvModule -->\n\nMailModule->CvModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nCvModule -->\n\nUserModule->CvModule\n\n\n\n\n\nCvListener\n\nCvListener\n\nCvModule -->\n\nCvListener->CvModule\n\n\n\n\n\nCvService\n\nCvService\n\nCvModule -->\n\nCvService->CvModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cv/cv.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CvListener\n                        \n                        \n                            CvService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CvController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Module } from '@nestjs/common';\nimport { CvController } from './cv.controller';\nimport { CvService } from './cv.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CvEntity } from './entities/cv.entity';\nimport { UserModule } from '../user/user.module';\nimport { MailModule } from '../mail/mail.module';\nimport { CvListener } from './Listeners/cv.listener';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([CvEntity]),\n    UserModule,\n    MailModule,\n    CacheModule.register({\n\n    })\n  ],\n  controllers: [CvController],\n  providers: [CvService, CvListener]\n})\nexport class CvModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CvService.html":{"url":"injectables/CvService.html","title":"injectable - CvService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cv/cv.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCv\n                            \n                            \n                                    Async\n                                deleteCv\n                            \n                            \n                                    Async\n                                findCvById\n                            \n                            \n                                    Async\n                                getCvs\n                            \n                            \n                                    Async\n                                restoreCv\n                            \n                            \n                                    Async\n                                softDeleteCv\n                            \n                            \n                                    Async\n                                statCvNumberByAge\n                            \n                            \n                                    Async\n                                updateCv\n                            \n                            \n                                updateCv2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cvRepository: Repository, userService: UserService, eventEmitter: EventEmitter2, cacheManager: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/cv/cv.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cvRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCv(cv: AddCvDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cv\n                                    \n                                                AddCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCv(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCvById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCvById(id: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCvs\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCvs(user)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreCv(id: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteCv(id: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        statCvNumberByAge\n                        \n                    \n                \n            \n            \n                \n                    \n                    statCvNumberByAge(maxAge, minAge: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    maxAge\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    minAge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCv\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCv(id: number, cv: UpdateCvDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cv\n                                    \n                                                UpdateCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCv2\n                        \n                    \n                \n            \n            \n                \nupdateCv2(updateCriteria, cv: UpdateCvDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cv/cv.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCriteria\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cv\n                                    \n                                                UpdateCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CACHE_MANAGER, Inject, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { CvEntity } from './entities/cv.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AddCvDto } from './dto/Add-cv.dto';\nimport { UpdateCvDto } from './dto/update-cv.dto';\nimport { UserRoleEnum } from '../enums/user-role.enum';\nimport { UserService } from '../user/user.service';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { EVENTS } from '../config/events';\nimport {Cache} from 'cache-manager';\n\n@Injectable()\nexport class CvService {\n  constructor(\n    @InjectRepository(CvEntity)\n    private cvRepository: Repository,\n    private userService: UserService,\n    private eventEmitter: EventEmitter2,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache\n  ) {\n  }\n\n  async findCvById(id: number, user) {\n\n    // const cacheId = `get.cv.${id}`;\n    // console.log('in get cv by id wuth cache id', cacheId);\n    // const cachedCv = await this.cacheManager.get(cacheId);\n    // // if (cachedCv) {\n    //   console.log('i get the cached cv',cachedCv);\n    // // }\n    const cv = await this.cvRepository.findOne(id);\n    if(! cv) {\n      throw new NotFoundException(`Le cv d'id ${id} n'existe pas`);\n    }\n    // Si on est admin ou si on est admin et on a pas de user\n    if (this.userService.isOwnerOrAdmin(cv, user)) {\n      // console.log('i am caching');\n      // await this.cacheManager.set(`get.cv.${id}`, cv, {\n      //   ttl: 10000000\n      // });\n      return cv;\n    }\n    else\n      throw new UnauthorizedException();\n  }\n  async getCvs(user): Promise {\n    if (user.role === UserRoleEnum.ADMIN)\n      return await this.cvRepository.find();\n    return await this.cvRepository.find({user});\n  }\n\n  async addCv(cv: AddCvDto, user): Promise {\n    const newCv = this.cvRepository.create(cv);\n    newCv.user = user;\n    await this.cvRepository.save(newCv);\n    // await this.mailService.addedCvMail();\n    this.eventEmitter.emit(EVENTS.CV_ADD, {\n      name: newCv.name\n    });\n    return newCv;\n  }\n\n  async updateCv(id: number, cv: UpdateCvDto, user): Promise {\n    //On récupére le cv d'id id et ensuite on remplace les anciennes valeurs de ce cv\n    // par ceux du cv passé en paramètre\n    const newCv = await this.cvRepository.preload({\n      id,\n      ...cv\n    });\n    // tester le cas ou le cv d'id id n'existe pas\n    if(! newCv) {\n      throw new NotFoundException(`Le cv d'id ${id} n'existe pas`);\n    }\n    //sauvgarder la nouvelle entité donc le nouveau cv\n   if (this.userService.isOwnerOrAdmin(newCv, user))\n      return await this.cvRepository.save(newCv);\n    else\n      new UnauthorizedException('');\n  }\n\n  updateCv2(updateCriteria, cv: UpdateCvDto ) {\n    return this.cvRepository.update(updateCriteria, cv);\n  }\n\n  // async removeCv(id: number) {\n  //   const cvToRemove = await this.findCvById(id);\n  //   return await this.cvRepository.remove(cvToRemove);\n  // }\n\n  async softDeleteCv(id: number, user) {\n    const cv = await this.cvRepository.findOne({id});\n    console.log('cv', cv);\n    if (!cv) {\n      throw new NotFoundException('');\n    }\n    if (this.userService.isOwnerOrAdmin(cv, user))\n      return this.cvRepository.softDelete(id);\n    else\n      throw new UnauthorizedException('');\n  }\n\n  async restoreCv(id: number, user) {\n\n    const cv = await this.cvRepository.query(\"select * from cv where id = ?\", [id]);\n    if (!cv) {\n      throw new NotFoundException('');\n    }\n    if (this.userService.isOwnerOrAdmin(cv, user))\n      return this.cvRepository.restore(id);\n    else\n      throw new UnauthorizedException('');\n  }\n\n  async deleteCv(id: number) {\n    return await this.cvRepository.delete(id);\n  }\n\n  async statCvNumberByAge(maxAge, minAge = 0) {\n    // Créer un queryBuilder\n    const qb = this.cvRepository.createQueryBuilder(\"cv\");\n    // Chercher le nombre de cv par age\n      qb.select(\"cv.age, count(cv.id) as nombreDeCv\")\n      .where(\"cv.age > :minAge and cv.Age\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationInterceptor.html":{"url":"injectables/DurationInterceptor.html","title":"injectable - DurationInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/duration.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/duration.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class DurationInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const dateIn = Date.now();\n    console.log('request created At : ', dateIn);\n    return next.handle().pipe(\n      tap(\n        () => {\n          const dateOut = Date.now();\n          console.log('request end At : ', dateOut);\n          console.log(`Request duration : ${dateOut - dateIn} ms`)\n        }\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirstMiddleware.html":{"url":"injectables/FirstMiddleware.html","title":"injectable - FirstMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirstMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/first.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/first.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Injectable()\nexport class FirstMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: () => void) {\n    console.log('Je suis le first Middleware');\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPaginatedTodoDto.html":{"url":"classes/GetPaginatedTodoDto.html","title":"class - GetPaginatedTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPaginatedTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/get-paginated-todo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/get-paginated-todo.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/get-paginated-todo.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class GetPaginatedTodoDto {\n\n  @IsNumber()\n  @IsOptional()\n  @Type(()=> Number)\n  page: number;\n\n  @IsNumber()\n  @IsOptional()\n  @Type(()=> Number)\n  item: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/Guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/strategy/passport-jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/strategy/passport-jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: PayloadInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/user/strategy/passport-jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PayloadInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PayloadInterface } from '../interfaces/payload.interface';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../entites/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    @InjectRepository(UserEntity)\n    private userRepository: Repository\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('SECRET'),\n    });\n  }\n\n  async validate(payload: PayloadInterface) {\n    // j'ai récupéré mon user\n    console.log(payload);\n    const user = await this.userRepository.findOne({username: payload.username});\n    // Si le user exste je le retourne et la automatiquement ce que je retourne dans validate\n    // est mis dans le request\n    if (user) {\n      delete user.salt;\n      delete user.password;\n      return user;\n    } else {\n      // Si non je déclenche une erreur\n      throw new UnauthorizedException();\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCredentialsDto.html":{"url":"classes/LoginCredentialsDto.html","title":"class - LoginCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-credentials.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-credentials.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-credentials.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginCredentialsDto {\n\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  password: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport {join} from 'path';\n\n@Module({\n  imports: [\n    MailerModule.forRoot({\n      // transport: 'smtps://user@example.com:topsecret@smtp.example.com',\n      // or\n      transport: {\n        service: 'gmail',\n        auth: {\n          user: 'aymen.noreply@gmail.com',\n          pass: '$as1234as',\n        },\n      },\n      defaults: {\n        from: '\"No Reply\" ',\n      },\n      template: {\n        dir: join(__dirname, 'templates'),\n        adapter: new HandlebarsAdapter(), // or new PugAdapter() or new EjsAdapter()\n        options: {\n          strict: true,\n        },\n      },\n    })\n  ],\n  providers: [MailService],\n  exports:[MailService]\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addedCvMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addedCvMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    addedCvMail(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService\n  ) {\n  }\n  async addedCvMail(payload) {\n    await this.mailerService.sendMail({\n      to: 'aymen.sellaouti@gmail.com',\n      subject: 'A new Cv is added',\n      template: './cv-sent',\n      context: payload,\n      attachments: [\n        {\n         filename: 'test1.txt',\n         content: 'Bonjour j envoi un fichier en pièce jointe',\n         contentType: 'text/plain'\n        }\n      ]\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadInterface.html":{"url":"interfaces/PayloadInterface.html","title":"interface - PayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PayloadInterface {\n  email: string;\n  role: string;\n  username: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntites.html":{"url":"classes/TimestampEntites.html","title":"class - TimestampEntites","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntites\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Generics/timestamp.entites..ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({update: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Generics/timestamp.entites..ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Generics/timestamp.entites..ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Generics/timestamp.entites..ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, UpdateDateColumn, DeleteDateColumn } from 'typeorm';\n\nexport class TimestampEntites {\n  @CreateDateColumn(\n    {\n      update: false\n    }\n  )\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/entities/todo.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Todo {\n  id: number;\n  name: string;\n  description: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TodoController.html":{"url":"controllers/TodoController.html","title":"controller - TodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                todo\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                getTodoById\n                            \n                            \n                                getTodos\n                            \n                            \n                                getTodosV2\n                            \n                            \n                                modifierTodo\n                            \n                            \n                                testPipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo(newTodo: AddTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodo\n                                    \n                                                AddTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodoById\n                        \n                    \n                \n            \n            \n                \ngetTodoById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodos\n                        \n                    \n                \n            \n            \n                \ngetTodos(mesQueryParams: GetPaginatedTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesQueryParams\n                                    \n                                                GetPaginatedTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodosV2\n                        \n                    \n                \n            \n            \n                \ngetTodosV2(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('v2')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifierTodo\n                        \n                    \n                \n            \n            \n                \nmodifierTodo(id, newTodo: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newTodo\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testPipe\n                        \n                    \n                \n            \n            \n                \ntestPipe(paramData, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('pipe')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paramData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get, Head, Headers, HttpStatus,\n  NotFoundException,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  Req,\n  Res, UseInterceptors, ValidationPipe,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Todo } from './entities/todo.entity';\nimport { findIndex } from 'rxjs/operators';\nimport { GetPaginatedTodoDto } from './dto/get-paginated-todo.dto';\nimport { AddTodoDto } from './dto/add-todo.dto';\nimport { TodoService } from './todo.service';\nimport { isNumeric } from 'rxjs/internal-compatibility';\nimport { type } from 'os';\nimport { UpperAndFusionPipe } from '../pipes/upper-and-fusion.pipe';\nimport { DurationInterceptor } from '../interceptors/duration.interceptor';\n\n\n@Controller('todo')\nexport class TodoController {\n  constructor(\n     private todoService: TodoService\n  ) {}\n\n  @Get('v2')\n  getTodosV2(\n    @Req() request: Request,\n    @Res() response: Response\n  ) {\n    console.log('Récupérer la liste des todos');\n    response.status(205);\n    response.json({\n      contenu :  `Je suis une réponse générée à partir de l'objet Response de express`\n    })\n  }\n\n  // Récupérer la liste des Todos\n  @Get()\n  getTodos(\n    @Query() mesQueryParams: GetPaginatedTodoDto,\n  ): Todo[] {\n    return this.todoService.getTodos();\n  }\n\n  // Récupérer le Todo via son Id\n  @Get('/:id')\n  getTodoById(\n    @Param('id', new ParseIntPipe(\n      {\n        errorHttpStatusCode: HttpStatus.NOT_FOUND\n      }\n    )) id\n  ) {\n    return this.todoService.getTodoById(id);\n  }\n\n  // Ajouter un Todo\n  @Post()\n  addTodo(\n    @Body() newTodo: AddTodoDto\n  ): Todo {\n      return this.todoService.addTodo(newTodo);\n  }\n\n  // Supprimer un Todo via son id\n  @Delete(':id')\n  deleteTodo(\n    @Param('id', ParseIntPipe) id\n  ) {\n    return this.todoService.deleteTodo(id);\n  }\n\n  @Put(':id')\n  modifierTodo(\n    @Param('id', ParseIntPipe) id,\n    @Body() newTodo: Partial\n  ) {\n      return this.todoService.updateTodo(id, newTodo);\n  }\n\n  @Post('pipe')\n  testPipe(\n    @Param('data', UpperAndFusionPipe) paramData,\n    @Body() data\n  ) {\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoModule.html":{"url":"modules/TodoModule.html","title":"module - TodoModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nTodoService\n\nTodoService\n\n\n\nTodoModule\n\nTodoModule\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TodoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TodoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { TodoController } from './todo.controller';\nimport { TodoService } from './todo.service';\n\n@Global()\n@Module({\n  controllers: [TodoController],\n  providers: [TodoService]\n})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                getTodoById\n                            \n                            \n                                getTodos\n                            \n                            \n                                updateTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo(newTodo: AddTodoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodo\n                                    \n                                                AddTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; count: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodoById\n                        \n                    \n                \n            \n            \n                \ngetTodoById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodos\n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Todo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTodo\n                        \n                    \n                \n            \n            \n                \nupdateTodo(id: number, newTodo: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newTodo\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/todo/todo.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Todo } from './entities/todo.entity';\nimport { AddTodoDto } from './dto/add-todo.dto';\n\n@Injectable()\nexport class TodoService {\n  todos: Todo[] = [];\n\n  getTodos(): Todo[] {\n    return this.todos;\n  }\n  addTodo(newTodo: AddTodoDto): Todo {\n    const {name, description} = newTodo;\n    let id;\n    if (this.todos.length) {\n       id = this.todos[this.todos.length - 1].id + 1;\n    } else {\n       id = 1;\n    }\n\n    const todo = {\n      id,\n      name,\n      description,\n      createdAt: new Date()\n    };\n    this.todos.push(todo);\n    return todo;\n  }\n\n  getTodoById(id: number): Todo {\n    const todo = this.todos.find((actualTodo) => actualTodo.id === id);\n    if (todo)\n      return todo;\n    throw new NotFoundException(`Le todo d'id ${id} n'existe pas`);\n  }\n\n  deleteTodo(id: number) {\n    // Chercher l'objet via son id dans le tableau des todos\n    const index = this.todos.findIndex((todo) => todo.id === +id);\n    // Utiliser la méthode splice pour supprimer le todo s'il existe\n    if (index >= 0 ) {\n      this.todos.splice(index, 1);\n    } else {\n      throw new NotFoundException(`Le todo d'id ${id} n'existe pas`);\n    }\n    // Sinon je vais déclencher une erreur\n    return {\n      message : `Le todo d'id ${id} a été supprimé avec suucès`,\n      count: 1\n    };\n  }\n\n  updateTodo(id:number, newTodo: Partial) {\n    const todo = this.getTodoById(id);\n    todo.description = newTodo.description? newTodo.description : todo.description;\n    todo.name = newTodo.name? newTodo.name : todo.name;\n    return todo;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCvDto.html":{"url":"classes/UpdateCvDto.html","title":"class - UpdateCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cv/dto/update-cv.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                cin\n                            \n                            \n                                firstname\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsNumber()@Min(15)@Max(65)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/update-cv.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/update-cv.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/update-cv.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/update-cv.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/update-cv.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cv/dto/update-cv.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class UpdateCvDto {\n\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @IsOptional()\n  @Type(() => Number )\n  @IsNumber()\n  @Min(15)\n  @Max(65)\n  age: number;\n\n  @IsOptional()\n  @Type(() => Number )\n  @IsNumber()\n  cin: number;\n\n  @IsOptional()\n  @IsString()\n  job: string;\n\n  @IsOptional()\n  @IsString()\n  path: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpperAndFusionPipe.html":{"url":"injectables/UpperAndFusionPipe.html","title":"injectable - UpperAndFusionPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpperAndFusionPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/upper-and-fusion.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(entry: literal type, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/upper-and-fusion.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\n\n@Injectable()\nexport class UpperAndFusionPipe implements PipeTransform {\n  transform(entry: { data: string[] }, metadata: ArgumentMetadata) {\n    if(metadata.type === 'body') {\n      return entry.data.map((element)=>element.toUpperCase()).join('-');\n    }\n    return entry;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: LoginCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: UserSubscribeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                UserSubscribeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Get, Post, UseInterceptors } from '@nestjs/common';\nimport { UserSubscribeDto } from './dto/user-subscribe.dto';\nimport { UserService } from './user.service';\nimport { LoginCredentialsDto } from './dto/login-credentials.dto';\nimport { UserEntity } from './entites/user.entity';\n\n@Controller('user')\nexport class UserController {\n  constructor(\n    private userService: UserService\n  ) {\n  }\n  @Post()\n  register(\n    @Body() userData: UserSubscribeDto\n  ) {\n    return this.userService.register(userData);\n  }\n\n  @Post('login')\n  login(\n    @Body() credentials: LoginCredentialsDto\n  ) {\n    return this.userService.login(credentials);\n  }\n\n  @Get('all')\n  findAll(): Promise {\n    return this.userService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entites/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TimestampEntites\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cvs\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cvs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CvEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined, {nullable: true, cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRoleEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entites/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({update: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TimestampEntites\n\n                            \n                        \n                    \n                        \n                                Defined in         TimestampEntites:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TimestampEntites\n\n                            \n                        \n                    \n                        \n                                Defined in         TimestampEntites:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TimestampEntites\n\n                            \n                        \n                    \n                        \n                                Defined in         TimestampEntites:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OneToMany, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { TimestampEntites } from '../../Generics/timestamp.entites.';\nimport { CvEntity } from '../../cv/entities/cv.entity';\nimport { UserRoleEnum } from '../../enums/user-role.enum';\nimport { Exclude } from 'class-transformer';\n\n@Entity('user')\nexport class UserEntity extends TimestampEntites{\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 50,\n    unique: true\n  })\n  username: string;\n\n  @Column({\n    unique: true\n  })\n  email: string;\n\n  @Column()\n  @Exclude()\n  password: string;\n\n  @Column()\n  @Exclude()\n  salt: string;\n\n  @Column({\n    type: 'enum',\n    enum: UserRoleEnum,\n    default: UserRoleEnum.USER\n  })\n  role: string;\n\n  @OneToMany(\n    type => CvEntity,\n    (cv) => cv.user,\n    {\n      nullable: true,\n      cascade: true\n    }\n  )\n  cvs: CvEntity[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUserModule -->\n\nJwtStrategy->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entites/user.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport * as dotenv from 'dotenv';\nimport { JwtStrategy } from './strategy/passport-jwt.strategy';\n\n\ndotenv.config();\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    PassportModule.register({\n      defaultStrategy: 'jwt'\n    }),\n    JwtModule.register({\n        secret: process.env.SECRET,\n        signOptions: {\n          expiresIn: 3600\n        }\n      })\n  ],\n  controllers: [\n    UserController\n  ],\n  providers: [UserService, JwtStrategy],\n  exports: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                isOwnerOrAdmin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(options: null)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerOrAdmin\n                        \n                    \n                \n            \n            \n                \nisOwnerOrAdmin(objet, user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objet\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: LoginCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userData: UserSubscribeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                UserSubscribeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { UserSubscribeDto } from './dto/user-subscribe.dto';\nimport { UserEntity } from './entites/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { LoginCredentialsDto } from './dto/login-credentials.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserRoleEnum } from '../enums/user-role.enum';\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private jwtService: JwtService\n  ) {\n  }\n  async register(userData: UserSubscribeDto): Promise> {\n    const user = this.userRepository.create({\n      ...userData\n    });\n    user.salt = await bcrypt.genSalt();\n    user.password = await bcrypt.hash(user.password, user.salt);\n    try {\n      await this.userRepository.save(user);\n    } catch (e) {\n      throw new ConflictException(`Le username et le email doivent être unique`);\n    }\n    return {\n        id: user.id,\n        username: user.username,\n        email: user.email,\n        role: user.role\n      };\n\n  }\n\n  async login(credentials: LoginCredentialsDto)  {\n\n    // Récupére le login et le mot de passe\n     const {username, password} = credentials;\n    // On peut se logger ou via le username ou le password\n    // Vérifier est ce qu'il y a un user avec ce login ou ce mdp\n    const user = await this.userRepository.createQueryBuilder(\"user\")\n      .where(\"user.username = :username or user.email = :username\",\n        {username}\n        )\n      .getOne();\n    // console.log(user);\n    // Si not user je déclenche une erreur\n\n    if (!user)\n      throw new NotFoundException('username ou password erronée');\n    // Si oui je vérifie est ce que le mot est correct ou pas\n    const hashedPassword = await bcrypt.hash(password, user.salt);\n    if (hashedPassword === user.password) {\n      const payload = {\n        username: user.username,\n        email: user.email,\n        role: user.role\n      };\n      const jwt = await this.jwtService.sign(payload);\n      return {\n        \"access_token\" : jwt\n      };\n    } else {\n      // Si mot de passe incorrect je déclenche une erreur\n      throw new NotFoundException('username ou password erronée');\n    }\n  }\n\n  isOwnerOrAdmin(objet, user) {\n    return user.role === UserRoleEnum.ADMIN || (objet.user && objet.user.id === user.id);\n  }\n\n  async findAll(options = null): Promise {\n    if (options) {\n      return await this.userRepository.find(options);\n    }\n    return await this.userRepository.find();\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscribeDto.html":{"url":"classes/UserSubscribeDto.html","title":"class - UserSubscribeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscribeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-subscribe.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user-subscribe.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user-subscribe.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user-subscribe.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class UserSubscribeDto {\n\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Generics/timestamp.entites..ts\n            \n            class\n            TimestampEntites\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/cv.seeder.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/events.ts\n            \n            variable\n            EVENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cv/Listeners/cv.listener.ts\n            \n            injectable\n            CvListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cv/cv.controller.ts\n            \n            controller\n            CvController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/cv/cv.service.ts\n            \n            injectable\n            CvService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/cv/dto/Add-cv.dto.ts\n            \n            class\n            AddCvDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cv/dto/update-cv.dto.ts\n            \n            class\n            UpdateCvDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cv/entities/cv.entity.ts\n            \n            class\n            CvEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/duration.interceptor.ts\n            \n            injectable\n            DurationInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/Logger.middleware.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/first.middleware.ts\n            \n            injectable\n            FirstMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pipes/upper-and-fusion.pipe.ts\n            \n            injectable\n            UpperAndFusionPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/dto/add-todo.dto.ts\n            \n            class\n            AddTodoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/dto/get-paginated-todo.dto.ts\n            \n            class\n            GetPaginatedTodoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/entities/todo.entity.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/todo/todo.controller.ts\n            \n            controller\n            TodoController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/todo/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/Guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/login-credentials.dto.ts\n            \n            class\n            LoginCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-subscribe.dto.ts\n            \n            class\n            UserSubscribeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/entites/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/interfaces/payload.interface.ts\n            \n            interface\n            PayloadInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/strategy/passport-jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-middlewares/cors : ^6.0.1\n        \n            @nest-middlewares/helmet : ^6.0.0\n        \n            @nest-middlewares/morgan : ^6.0.0\n        \n            @nestjs-modules/mailer : ^1.6.0\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/event-emitter : ^1.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.7.8\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            @t00nday/nestjs-pdf : ^2.0.6\n        \n            @types/passport-jwt : ^3.0.3\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager : ^3.4.4\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            faker : ^5.5.3\n        \n            handlebars : ^4.7.7\n        \n            mysql : ^2.18.1\n        \n            nodemailer : ^6.6.3\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.25\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enums/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../cv.seeder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/commands/cv.seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CvModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CvModule\n\n\n\ncluster_CvModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCvModule\n\nCvModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCvModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nCvModule -->\n\nMailModule->CvModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nCvModule -->\n\nUserModule->CvModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCvListener\n\nCvListener\n\nCvModule -->\n\nCvListener->CvModule\n\n\n\n\n\nCvService\n\nCvService\n\nCvModule -->\n\nCvService->CvModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUserModule -->\n\nJwtStrategy->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EVENTS   (src/.../events.ts)\n                        \n                        \n                            logger   (src/.../Logger.middleware.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/events.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EVENTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  'CV_ADD': 'cv.add'\n}\n                    \n                \n\n\n        \n    \n\n    src/middlewares/Logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req: Request, res: Response, next) => {\n  console.log('ip:', req.ip);\n  next();\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
